import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,d as e,w as l,b as n,a as t,e as a}from"./app-6706a352.js";const u={},p=t("p",null,[n("Linux系统下，以.开头的都是隐藏文件"),t("br"),n(" Linux中..表示上一级目录，.表示当前目录"),t("br"),n(" 长格式引导：-- 引导单词"),t("br"),n(" 短格式引导：- 引导字母")],-1),b=t("ul",null,[t("li",null,"- 表示普通文件")],-1),h=t("pre",null,[t("code",null,`<font color=red>  压缩文件 </font>红色 
`)],-1),m=t("br",null,null,-1),_=t("br",null,null,-1),g=t("br",null,null,-1),v=t("br",null,null,-1),k=t("br",null,null,-1),f=t("p",null,[n("绝对路径：从根目录开始写的路径叫绝对路径"),t("br"),n(" 相对路径：从当前目录开始写的路径相对路径")],-1),x=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191606981.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),y=t("h2",{id:"❀ls命令",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀ls命令","aria-hidden":"true"},"#"),n(" ❀ls命令")],-1),q={href:"http://1.ls",target:"_blank",rel:"noopener noreferrer"},w=t("thead",null,[t("tr",null,[t("th",null,"--help"),t("th",null,"查看帮助信息列表")])],-1),P=t("tr",null,[t("td",null,"-a (all)"),t("td",null,"查看所有内容，包括隐藏文件")],-1),I=t("tr",null,[t("td",null,"-h (--human-readable)"),t("td",null,"以人类可读方式显示")],-1),z=t("tr",null,[t("td",null,"-l (--long)"),t("td",null,"以长格式显示文件信息")],-1),T=t("tr",null,[t("td",null,"-d"),t("td",null,"查看目录本身")],-1),L=t("tr",null,[t("td",null,"-S"),t("td",null,"由大到小排序")],-1),A=t("tr",null,[t("td",null,"-r"),t("td",null,"由小到大排序（由旧到新）")],-1),C=t("tr",null,[t("td",null,"-t"),t("td",null,"由新到旧")],-1),D={href:"https://blog.csdn.net/liu_chen_yang/article/details/123070483?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},S=t("td",null,null,-1),R=t("tr",null,[t("td",null,"查看帮助命令：help man info"),t("td")],-1),U=t("tr",null,[t("td",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191606638.png",alt:"",loading:"lazy"}),n("❀cd命令")]),t("td")],-1),M=a(`<table><thead><tr><th>cd</th><th>切换目录（后面跟路径“/”）</th></tr></thead><tbody><tr><td>cd -</td><td>返回上一个工作目录</td></tr><tr><td>cd ..</td><td>返回上一级目录</td></tr></tbody></table><h2 id="❀pwd命令" tabindex="-1"><a class="header-anchor" href="#❀pwd命令" aria-hidden="true">#</a> ❀pwd命令</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">pwd</span>	打印工作目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> <span class="token parameter variable">-root</span>	切换到管理员命令
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="❀date命令" tabindex="-1"><a class="header-anchor" href="#❀date命令" aria-hidden="true">#</a> ❀date命令</h2><table><thead><tr><th>date</th><th>查看系统时间和日期 (+%Y-%m-%d %H:%M:%S)</th></tr></thead><tbody><tr><td>-d&lt;字符串&gt;</td><td>显示字符串所指的日期与时间。字符串前后必须加上双引号；</td></tr><tr><td>-s&lt;字符串&gt;</td><td>根据字符串来设置日期与时间。字符串前后必须加上双引号；</td></tr><tr><td>日期格式字符串列表<br></td><td></td></tr><tr><td>如果需要以指定的格式显示日期，可以使用“+”开头的字符串指定其格式</td><td></td></tr></tbody></table><blockquote><p>%H 小时(以00-23来表示)。<br> %I 小时(以01-12来表示)。<br> %K 小时(以0-23来表示)。<br> %l 小时(以0-12来表示)。<br> %M 分钟(以00-59来表示)。<br> %P AM或PM。<br> %r 时间(含时分秒，小时以12小时AM/PM来表示)。<br> %s 总秒数。起算时间为1970-01-01 00:00:00 UTC。<br> %S 秒(以本地的惯用法来表示)。<br> %T 时间(含时分秒，小时以24小时制来表示)。<br> %X 时间(以本地的惯用法来表示)。<br> %Z 市区。<br> %a 星期的缩写。<br> %A 星期的完整名称。<br> %b 月份英文名的缩写。<br> %B 月份的完整英文名称。<br> %c 日期与时间。只输入date指令也会显示同样的结果。<br> %d 日期(以01-31来表示)。<br> %D 日期(含年月日)。<br> %j 该年中的第几天。<br> %m 月份(以01-12来表示)。<br> %U 该年中的周数。<br> %w 该周的天数，0代表周日，1代表周一，异词类推。<br> %x 日期(以本地的惯用法来表示)。<br> %y 年份(以00-99来表示)。<br> %Y 年份(以四位数来表示)。<br> %n 在显示时，插入新的一行。<br> %t 在显示时，插入tab。<br> MM 月份(必要)<br> DD 日期(必要)<br> hh 小时(必要)<br> mm 分钟(必要)<br> ss 秒(选择性)</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191606820.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀创建、删除文件和目录命令" tabindex="-1"><a class="header-anchor" href="#❀创建、删除文件和目录命令" aria-hidden="true">#</a> ❀创建、删除文件和目录命令</h2><table><thead><tr><th>touch</th><th>创建文件或者更新文件时间戳</th></tr></thead><tbody><tr><td>stat</td><td>查看文件信息（stat后面加文件名）</td></tr></tbody></table><table><thead><tr><th>mkdir</th><th>创建一个新的目录</th></tr></thead><tbody><tr><td>-v（详细）</td><td>为每个创建的目录打印一条消息（在mkdir后面加-v和目录名）</td></tr><tr><td>-p （父母）</td><td>如果存在，就不会创建，如果不存在，就会创建父目录（例如：mkdir -pv dir1/dir2/dir3）</td></tr></tbody></table><blockquote><p>{1..100} 表示1到100</p></blockquote><table><thead><tr><th>rm</th><th>删除文件</th></tr></thead><tbody><tr><td>-r</td><td>删除目录（rm -r 目录名）</td></tr><tr><td>-f</td><td>忽略提示，直接强制删除</td></tr></tbody></table><h2 id="❀alias命令" tabindex="-1"><a class="header-anchor" href="#❀alias命令" aria-hidden="true">#</a> ❀alias命令</h2>`,14),N=t("br",null,null,-1),E={href:"https://blog.csdn.net/liu_chen_yang/article/details/123204224?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},O=a('<h2 id="❀复制、移动、重命名、查看-文件、目录-命令" tabindex="-1"><a class="header-anchor" href="#❀复制、移动、重命名、查看-文件、目录-命令" aria-hidden="true">#</a> ❀复制、移动、重命名、查看（文件、目录）命令</h2><table><thead><tr><th>mv</th><th>移动或重命名</th></tr></thead><tbody><tr><td>参数</td><td>解析</td></tr><tr><td>-b</td><td>覆盖前为目标文件创建备份</td></tr><tr><td>-f</td><td>强制覆盖目标文件而不询问</td></tr><tr><td>-i</td><td>覆盖目标文件前询问用户是否确认</td></tr><tr><td>-n</td><td>不要覆盖已有文件</td></tr><tr><td>-u</td><td>当源文件比目标文件更新时，才执行覆盖操作</td></tr><tr><td>-v</td><td>显示执行过程详细信息</td></tr><tr><td>-Z</td><td>设置文件安全上下文</td></tr><tr><td>--help</td><td>显示帮助信息</td></tr><tr><td>--version</td><td>显示版本信息</td></tr></tbody></table><blockquote><p>mv 原路径 目标路径<br><br> mv 原文件名 要修改的文件名</p></blockquote><table><thead><tr><th>cp</th><th>复制</th></tr></thead><tbody><tr><td>-r</td><td>复制目录</td></tr><tr><td>*</td><td>匹配任意所有</td></tr><tr><td>？</td><td>匹配任意一个字符</td></tr></tbody></table><blockquote><p>cp【选项】 原路径 目标路径</p></blockquote><table><thead><tr><th>cat</th><th>查看文件内容</th></tr></thead><tbody><tr><td>-n</td><td>带行号</td></tr><tr><td>tac</td><td>查看倒过来的文件内容</td></tr><tr><td>nl</td><td>带行号显示文件内容，不显示空格行</td></tr><tr><td>more</td><td>分页（回车是一行，空格是一页，q退出）</td></tr><tr><td>less</td><td>可以上下查看内容</td></tr><tr><td>head</td><td>.默认查看前十行</td></tr><tr><td>tail</td><td>默认看后十行</td></tr><tr><td>-n</td><td>指定查看几行</td></tr><tr><td>-f</td><td>持续观察查看</td></tr></tbody></table>',6),j=t("br",null,null,-1),B=t("br",null,null,-1),G=t("br",null,null,-1),F=a('<figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191606357.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀find查找、wc统计命令" tabindex="-1"><a class="header-anchor" href="#❀find查找、wc统计命令" aria-hidden="true">#</a> ❀find查找、wc统计命令</h2><blockquote><p>find 按条件查找文件<br><br> find 查找范围（默认是当前目录） 条件</p></blockquote><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-size</td><td>按大小查找（例如：find / -size +1M（查找大于1M））</td></tr><tr><td>-type</td><td>按类型查找（例如：find / -name &quot;<em>.cfg&quot; -type f（查找名字是</em>.cfg的和类型为f的管道文件） ）</td></tr><tr><td>-name</td><td>按名字查找（例如：find / -name &quot;<em>.cfg&quot;（查找名字是</em>.cfg的文件））</td></tr><tr><td>-mtime +天数</td><td>按天数查找（例如：find /application/log/ -mtime +0 -type d （查找/application/log下一天前的日志，类型为目录））</td></tr><tr><td>管道 |</td><td>将前一个命令的执行结果给后一个命令处理（例如：head -3 anaconda-ks.cfg</td></tr></tbody></table><blockquote><p>删除系统中所有a.txt文件<br> rm -rf $(find / -name &quot;a.txt&quot;)<br> find / -name &quot;a.txt&quot; -exec rm -rf {} \\ <br> find / -name &quot;a.txt&quot; |xargs rm -rf</p></blockquote><blockquote><p>删除/application/log/下的一天前的日志并设置为每周一删除，类型为目录<br> 0 0 * * 1 find /application/log/ -mtime +0 -type d | xargs rm -rf</p></blockquote><table><thead><tr><th>wc</th><th>统计（后面直接跟文件名）</th></tr></thead><tbody><tr><td>-l</td><td>统计行数</td></tr><tr><td>-w</td><td>统计单词</td></tr><tr><td>-c</td><td>统计字节</td></tr><tr><td>-m</td><td>统计字符</td></tr></tbody></table><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191606471.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀vi-vim命令" tabindex="-1"><a class="header-anchor" href="#❀vi-vim命令" aria-hidden="true">#</a> ❀vi/vim命令</h2><blockquote><p>vi/vim 进入编辑模式</p></blockquote>',10),X=t("blockquote",null,[t("p",null,[n("i：在光标显示的地方直接编辑；"),t("br"),n(" I：在光标显示的行首编辑；"),t("br"),n(" a：在光标显示的后一个编辑；"),t("br"),n(" A：在光标显示的行尾编辑；"),t("br"),n(" o：在光标显示的下一行编辑；"),t("br"),n(" O：在光标显示的上一行编辑；"),t("br"),n(" s：删除光标所在的位置并进行编辑；"),t("br"),n(" S：删除光标所在的行进行编辑；")])],-1),H=t("br",null,null,-1),V=t("br",null,null,-1),Y=t("br",null,null,-1),$=t("p",null,[n("gg 跳转到文件第一行"),t("br"),n(" G 跳转到文件最后一行")],-1),K=t("p",null,[n("home或^ 跳转到行首"),t("br"),n(" end或$ 跳转到行尾"),t("br"),n(" w 每次跳过一个单词"),t("br")],-1),W=t("p",null,[n("dd 删除光标所在行"),t("br"),n(" D 删除光标所在位置到行尾")],-1),Q=t("p",null,[n("dG 删除光标所在行到文件结束位置"),t("br"),n(" x或delete 删除光标所在的字符"),t("br")],-1),Z=t("p",null,"yy 复制光标所在的一行",-1),J=t("p",null,[n("p 粘贴到光标的下一行"),t("br"),n(" P 粘贴到光标的上一行"),t("br"),t("br"),n(" u 撤销"),t("br"),n(" ctrl+r 恢复")],-1),tt=t("blockquote",null,null,-1),nt=t("br",null,null,-1),et=t("br",null,null,-1),st=a("<blockquote><p>/ 查找<br> :w 保存（文件路径）另存为<br> :q 退出<br> :wq 保存并退出<br> :q！ 强制退出<br> :w！ 强制保存<br> :wq！ 强制保存并退出<br> :r 文件路径 将另一个文件读入光标下一行<br> %s#old#new#g 替换<br> :%s/old/new/g 替换（加g是全部替换，old是原内容要换成new，new是要换成的内容 #代表分割; /也代表分割）<br> :set number /set nu 显示行号<br> :set nonumber /set nonu 取消显示行号<br> :set nohlsearch 取消高亮显示</p></blockquote>",1),lt=t("blockquote",null,[t("p",null,[n("ctrl+v 可视块模式"),t("br"),n(" shift+v/V 可视行模式"),t("br"),n(" v 可视模式")])],-1),at=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605587.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),dt=t("h2",{id:"❀压缩与解压缩",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀压缩与解压缩","aria-hidden":"true"},"#"),n(" ❀压缩与解压缩")],-1),ot=t("blockquote",null,[t("p",null,[n("1-9 9最大 生成文件小，速度越慢"),t("br"),n(" gunzip=gzip -d"),t("br"),t("br"),n(" 压缩：gzip 原文件 文件名"),t("br"),n(" 解压缩：gunzip 原文件 文件名")])],-1),rt=t("blockquote",null,[t("p",null,[n("bunzip2=bzip2 -d"),t("br"),t("br"),n(" 压缩：bzip2 原文件 文件名"),t("br"),n(" 解压缩：bunzip2 原文件 文件名")])],-1),it=a("<table><thead><tr><th>tar</th><th>制作或释放归档文件</th></tr></thead><tbody><tr><td>-c</td><td>create 创建</td></tr><tr><td>-v</td><td>显示详细信息</td></tr><tr><td>-j</td><td>掉用bzip2压缩格式</td></tr><tr><td>-z</td><td>掉用gzip压缩格式</td></tr><tr><td>-f</td><td>指定归档文件</td></tr><tr><td>-x</td><td>解包</td></tr><tr><td>-t</td><td>列出归档文件内容</td></tr><tr><td>-C</td><td>指定释放归档文件的路径</td></tr></tbody></table>",1),ct=t("p",null,[n("--exclude=“”指定排除不需要传输的文件模式"),t("br"),n(' 比如：tar -cvzf bash.tar.gz /dir1 --exclude="*.txt" 排除所有以.txt为后缀的文件不传输'),t("br")],-1),ut=t("p",null,[n("压缩：tar cvf 原文件 文件名"),t("br"),n(" 解压缩：tar xvf 原文件 文件名")],-1),pt=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605980.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),bt=t("h2",{id:"❀grep-sed-awk命令以及正则表达式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀grep-sed-awk命令以及正则表达式","aria-hidden":"true"},"#"),n(" ❀grep sed awk命令以及正则表达式")],-1),ht=a("<blockquote><p>grep 【选项】 &#39;内容&#39; 文件名</p></blockquote><table><thead><tr><th>grep</th><th>以行为单位过滤</th></tr></thead><tbody><tr><td>-i</td><td>不区分大小写</td></tr><tr><td>-v</td><td>取反</td></tr><tr><td>-w</td><td>以单词为单位进行过滤</td></tr><tr><td>-B</td><td>指定行数，过滤指定内容以及下几行</td></tr><tr><td>-A</td><td>指定行数，过滤指定内容以及上几行</td></tr><tr><td>-C</td><td>指定行数，过滤指定内容以及上下各几行</td></tr><tr><td>-o</td><td>只输出过滤的内容</td></tr><tr><td>-c</td><td>统计过滤的行数</td></tr><tr><td>-n</td><td>显示行号</td></tr></tbody></table>",2),mt=a("<p>$ 以...结尾<br> ^ 以...开头<br> . 匹配任意一个字符<br> - 匹配前一个字符或子表达式任意次（例如：grep &quot;g.<em>d&quot; a.txt（过滤a.txt文件中的以g开头以d结尾</em>可以代表有任意多个字符或没有字符））<br> [A-Z] [a-z] [0-9] [A-Za-z0-9]<br> [^a-z] 取反</p><p>扩展正则表达式 egrep =grep -E<br> {n,m} 匹配前一个字符或子表达式n到m次<br> {n, } 匹配前一个字符或子表达式最少n次<br> { ,m} 匹配前一个字符或表达式最少m次<br> {n} 匹配前一个字符或子表达式n次</p><p>+ 匹配前一个字符或子表达式1次以上（*包括0+不包括，至少）<br> ？ 匹配前一个字符或子表达式0次或1次以上<br> | 或 <br> () 分组(例如：(g|f)ood)</p><p>\\ 转义，取消一个字符的特殊含义</p>",4),_t={href:"https://blog.csdn.net/liu_chen_yang/article/details/123231302",target:"_blank",rel:"noopener noreferrer"},gt=t("blockquote",null,[t("p",null,[n("查找/root这层目录有多少个普通文件？"),t("br"),n(' find ./ -maxdepth 1 -type f ! -name ".*" | wc -l | ll | grep -c "^_"')])],-1),vt=t("blockquote",null,[t("p",null,"sed [选项] ‘[操作地址]sed内置操作’ 文件")],-1),kt=a("<table><thead><tr><th>sed</th><th>流文件处理工具</th></tr></thead><tbody><tr><td>-n</td><td>只输出处理的行</td></tr><tr><td>-i</td><td>修改文件内容，编辑文件</td></tr><tr><td>-e</td><td>指定多个sed内置操作，现在不常用，多个sed内置操作可以使用分号隔开</td></tr><tr><td>-r</td><td>支持扩展正则表达式</td></tr></tbody></table>",1),ft=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>2</td><td>代表处理文件的第2行</td></tr><tr><td>1,5</td><td>代表处理文件的第1到5行</td></tr><tr><td>1;5</td><td>代表处理文件的第1行和第5行</td></tr><tr><td>1~2</td><td>代表指定步长为2，处理的是1,3,5…行</td></tr><tr><td>2,~2</td><td>代表处理文件的第2行开始，到2的倍数行结束。（2,~2=2,4 ;4,~4=4,8行）</td></tr><tr><td>4,$</td><td>代表处理文件第4行到最后一行</td></tr><tr><td>1,+2</td><td>代表处理文件的第1行到第1+2行，也就是1到3行</td></tr></tbody></table>",1),xt=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>p</td><td>打印</td></tr><tr><td>a</td><td>在指定行后追加数据</td></tr><tr><td>i</td><td>在指定行前插入行前</td></tr><tr><td>d</td><td>删除指定行</td></tr><tr><td>c</td><td>替换指定整行</td></tr><tr><td>s</td><td>替换指定字符，默认替换每行第一个字符</td></tr><tr><td>g</td><td>通常与s组合使用，替换全部指定字符</td></tr><tr><td>n</td><td>获取下一行</td></tr><tr><td>y</td><td>字符转换，类似于tr命令(正则不能使用)</td></tr><tr><td>r</td><td>将文件读入指定行后</td></tr><tr><td>w</td><td>将指定行另存为文件</td></tr><tr><td>q</td><td>结束sed操作</td></tr><tr><td>N</td><td>不会清空模式空间内的内容，将下一行追加到模式空间，两行数据以换行符</td></tr></tbody></table>",1),yt=t("blockquote",null,[t("p",null,"awk [选项] ‘BEGIN{command}匹配模式{command}END{command}’ 文件")],-1),qt=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>$0</td><td>文件的整行</td></tr><tr><td>$1~$n</td><td>awk处理的列，以FS为分隔符</td></tr><tr><td>NF</td><td>查看一共有多少列</td></tr><tr><td>$NF</td><td>查看文件的最后一列</td></tr><tr><td>NR</td><td>表示处理的行数（一共有多少行） 外：指定输出第几行</td></tr><tr><td>FNR</td><td>表示处理当前文件的行数</td></tr><tr><td>FS</td><td>输入字段的分隔符，默认空格或制表符</td></tr><tr><td>RS</td><td>输入记录的分隔符，默认是换行</td></tr><tr><td>OFS</td><td>输出字段的分隔符，默认空格</td></tr><tr><td>ORS</td><td>输出行的分隔符，默认换行</td></tr><tr><td>FILENAME</td><td>awk处理的文件名</td></tr><tr><td>PATH</td><td>文件路径</td></tr><tr><td>ARGC</td><td>命令行参数个数</td></tr><tr><td>ARGV</td><td>命令行参数数组</td></tr><tr><td>ENVIRON</td><td>获取Linux系统中的环境变量</td></tr></tbody></table>",1),wt=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605227.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),Pt=t("hr",null,null,-1),It=t("h2",{id:"❀制作模板机",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀制作模板机","aria-hidden":"true"},"#"),n(" ❀制作模板机")],-1),zt={href:"https://blog.csdn.net/liu_chen_yang/article/details/115432904?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},Tt=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入：</span>
<span class="token function">vim</span> /etc/sysconfig/network-scripts/ifcfg-ens33
<span class="token comment">#1.网络配置  NAT</span>
<span class="token assign-left variable">TYPE</span><span class="token operator">=</span>Ethernet
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>static
<span class="token assign-left variable">NAME</span><span class="token operator">=</span>ens33
<span class="token assign-left variable">DEVICE</span><span class="token operator">=</span>ens33
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.2.10
<span class="token assign-left variable">NETMASK</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0
<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.2.1
<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">114.114</span>.114.114


/etc/init.d/network restart 重启网络服务 
<span class="token function">ip</span> a  查看网络信息 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Lt=t("blockquote",null,[t("p",null,[n("进入vi /etc/ssh/sshd_config"),t("br"),n(" 再找到UseDNS 吧yes改成no，前面“#”符号也要删，保存退出"),t("br"),t("br"),n(" 重启ssh服务："),t("br"),n(" systemctl restart sshd")])],-1),At={href:"https://blog.csdn.net/liu_chen_yang/article/details/123531619",target:"_blank",rel:"noopener noreferrer"},Ct=a("<blockquote><p>systemctl stop firewalld 关闭防火墙服务<br> start <br><br> systemctl disable firewalld 禁止防火墙开机自启动<br> enable <br><br> firewall-cmd --state 查看防火墙状态 <br> systemctl status firewalld<br><br> systemctl is-enabled firewalld<br> 查看防火墙是否开机自启动 <br><br> getenforce 查看selinux的状态<br> setenforce 设置selinux的状态<br> vi /etc/selinux/config<br> vi /etc/sysconfig/selinux<br> SELINUX=disabled<br> 重启系统生效</p></blockquote>",1),Dt=a('<blockquote><p>查看磁盘信息：<br> fdisk -l 查看<br><br> 创建目录：<br> mkdir /media/cdrom<br> mount /dev/sr0 /media/cdrom 挂载磁盘 <br><br> df -Th 挂在完查看挂载信息</p></blockquote><p>如果遇到挂载时报错：<code>mount: 在 /dev/sr0 上找不到媒体</code><br> 请检查ISO映像文件的连接设置；</p><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605133.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',3),St=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/yum.repos.d/
<span class="token function">mkdir</span> bak
<span class="token function">mv</span> *.repo bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>yum源文件存在 /etc/yum.repos.d 中<br><br> 创建一个文件(local.repo)：<br> vi local.repo<br> [local]<br> name=local<br> baseurl=file:///media/cdrom<br> enabled=1<br> gpgcheck=0</p></blockquote>`,2),Rt=t("br",null,null,-1),Ut=t("br",null,null,-1),Mt=t("br",null,null,-1),Nt=t("br",null,null,-1),Et=t("br",null,null,-1),Ot=t("br",null,null,-1),jt=t("br",null,null,-1),Bt=t("br",null,null,-1),Gt=t("br",null,null,-1),Ft=t("br",null,null,-1),Xt=t("br",null,null,-1),Ht=t("br",null,null,-1),Vt=t("br",null,null,-1),Yt=t("br",null,null,-1),$t=t("blockquote",null,[t("p",null,[n("1.系统中只有一块硬盘，sda,分区sda1,sda2 ;"),t("br"),n(" 2.根目录是整个系统目录的顶点，/mnt也在根目录下；"),t("br"),n(" 3.如果知道根目录对应的是哪个硬盘分区，可以判断出"),t("br"),n(" a.txt存到哪个设备上；"),t("br"),t("br"),n(" mount /dev/sr0 /media/cdrom"),t("br"),n(" mount /dev/sdb4 /mnt")])],-1),Kt=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#Cetnos6格式化磁盘</span>
mkfd.ext4 <span class="token parameter variable">-f</span> /dev/<span class="token punctuation">[</span>sda<span class="token punctuation">]</span>
<span class="token comment">#Centos7格式化磁盘</span>
mkfs.xfs <span class="token parameter variable">-f</span> /dev/<span class="token punctuation">[</span>sda<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,2),Wt=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605537.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),Qt=t("hr",null,null,-1),Zt=t("h2",{id:"❀软件包管理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀软件包管理","aria-hidden":"true"},"#"),n(" ❀软件包管理")],-1),Jt=t("th",null,"红帽系列操作系统",-1),tn=t("tbody",null,[t("tr",null,[t("td",null,"rpm -q 包名"),t("td",null,"查看rpm包是否安装")]),t("tr",null,[t("td",null,"rpm -qa"),t("td",null,"列出所有已安装的rpm包")]),t("tr",null,[t("td",null,"rpm -qi 包名"),t("td",null,"查看rpm包的详细信息")]),t("tr",null,[t("td",null,"rpm -qpi 完整包名"),t("td",null,"查看未安装rpm包的详细信息")]),t("tr",null,[t("td",null,"rpm -ql 包名"),t("td",null,"查看rpm包生成的文件路径")]),t("tr",null,[t("td",null,"rpm -ivh 完整包名"),t("td",null,"安装rpm包")]),t("tr",null,[t("td",null,"rpm -Uch 完整包名"),t("td",null,"升级rpm包")]),t("tr",null,[t("td",null,"rmp -v 包名"),t("td",null,"详细信息")]),t("tr",null,[t("td",null,"rpm -h 包名"),t("td",null,"以#显示进度条")]),t("tr",null,[t("td",null,"rpm -e 包名"),t("td",null,"卸载")])],-1),nn=t("blockquote",null,[t("p",null,[n("在CenOs系统中，卸载gcc的软件包时，可以使用命令rpm -e gcc"),t("br"),t("br"),n(" 使用rpm命令强制卸载软件包时要加选项 --nodeps")])],-1),en=t("p",null,[n("FHS文件系统标准"),t("br"),n(" 第一层：定义了跟目录下的目录存放相应的文件"),t("br"),n(" 第二层：/usr和/var目录的划分")],-1),sn=t("th",null,"自动解决依赖安装rpm包",-1),ln=t("tbody",null,[t("tr",null,[t("td",null,"yum install 包名"),t("td",null,"安装")]),t("tr",null,[t("td",null,"yum list"),t("td",null,"查看所有的rpm包")]),t("tr",null,[t("td",null,"yum list installed"),t("td",null,"已经安装的rpm包")]),t("tr",null,[t("td",null,"yum info 包名"),t("td",null,"查看软件包的信息")]),t("tr",null,[t("td",null,"yum search 命令"),t("td",null,"查看命令属于哪个包")]),t("tr",null,[t("td",null,"yum provides 命令"),t("td",null,"查看命令属于哪个包")]),t("tr",null,[t("td",null,"yum history"),t("td",null,"查看yum命令的历史记录")]),t("tr",null,[t("td",null,"yum remove 包名"),t("td",null,"卸载")]),t("tr",null,[t("td",null,"yum update 包名"),t("td",null,"升级")]),t("tr",null,[t("td",null,"yum grouplist"),t("td",null,"列出所有包组")])],-1),an=a("<p>tar包（源码包）</p><blockquote><p>1.解包<br> 物理机向虚拟机传文件：<br>   (1.利用U盘，挂载<br>   (2.lrzsz包提供的命令<br>    rz 物理机--&gt;虚拟机<br>    sz 虚拟机--&gt;物理机<br>   (3.xftp 大文件<br> 2.配置<br>   （1）sz先把nginx压缩包复制到虚拟机<br>   （2）解压nginx压缩包：tar xf nginx-1.6.0.tar.gz -C /usr/src/<br>   （3）切换到nginx目录下：cd /usr/src/nginx-1.6.0<br>   （4）./configure --prefix=/usr/local/nginx &amp;&amp; make &amp;&amp; make install<br> 指定安装路径然后编译在安装</p></blockquote>",2),dn=t("p",null,"没有编译环境",-1),on=t("br",null,null,-1),rn=t("p",null,"缺少pcre-devel库",-1),cn=t("br",null,null,-1),un=t("p",null,"缺少zlib-devel",-1),pn=t("br",null,null,-1),bn=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191605702.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),hn=t("h2",{id:"❀用户、用户组管理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀用户、用户组管理","aria-hidden":"true"},"#"),n(" ❀用户、用户组管理")],-1),mn=a("<blockquote><p>在Linux系统中创建用户后，会以目录 /etc/skel/ 为模板复制文件到用户家目录<br><br> /etc/passwd 存放的是用户信息<br> /etc/shadow 存放的是用户密码<br><br> root: x :0:0:root:/root:/bin/bash<br> 第一段：用户名<br> 第二段：密码占位符<br> 第三段：UID<br> 第四段：GID<br> 第五段：描述信息<br> 第六段：用户家目录<br> 第七段：用户登录的shell<br><br> /bin/bash<br> /sbin/nologin<br></p></blockquote>",1),_n=t("br",null,null,-1),gn=t("br",null,null,-1),vn=t("br",null,null,-1),kn=a("<blockquote><p>useradd [选项] 用户名</p></blockquote><table><thead><tr><th>useradd</th><th>新增用户</th></tr></thead><tbody><tr><td>-u</td><td>指定UID</td></tr><tr><td>-g</td><td>指定GID，用户的主要组</td></tr><tr><td>-G</td><td>指定用户的附加</td></tr><tr><td>-s</td><td>指定登录shell，默认是/bin/bash</td></tr><tr><td>-M</td><td>不创建用户家目录</td></tr><tr><td>-m</td><td>创建用户家目录</td></tr><tr><td>-d</td><td>指定用户家目录 默认家目录/home/与用户同名</td></tr></tbody></table>",2),fn=t("blockquote",null,[t("p",null,[n("su 用户名 切换用户"),t("br"),t("br"),n(" su - 用户名 系统环境变化"),t("br"),t("br"),n(" ctrl+d或exit 退出登录")])],-1),xn=a("<blockquote><p>usermod [选项] 用户名</p></blockquote><table><thead><tr><th>usermod</th><th>修改用户信息</th></tr></thead><tbody><tr><td>-c</td><td>修改描述字段</td></tr><tr><td>-d</td><td>修改家目录位置</td></tr><tr><td>-g</td><td>修改gid</td></tr><tr><td>-u</td><td>修改用户的uid</td></tr><tr><td>-l</td><td>修改用户名</td></tr><tr><td>-s</td><td>修改登录的shell</td></tr><tr><td>-L</td><td>锁定用户</td></tr><tr><td>-U</td><td>解锁</td></tr></tbody></table>",2),yn=t("br",null,null,-1),qn=t("br",null,null,-1),wn=t("br",null,null,-1),Pn=t("br",null,null,-1),In=t("br",null,null,-1),zn=t("br",null,null,-1),Tn=t("br",null,null,-1),Ln=t("blockquote",null,[t("p",null,"userdel [选项] 用户名")],-1),An=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"userdel"),t("th",null,"删除用户")])]),t("tbody",null,[t("tr",null,[t("td",null,"-r"),t("td",null,"删除用户时删除家目录")])])],-1),Cn=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>groupadd</td><td>添加用户组</td></tr><tr><td>groupdel</td><td>删除用户组</td></tr><tr><td>gpasswd</td><td>设置用户组密码</td></tr><tr><td>-a</td><td>将用户添加到一个组中</td></tr></tbody></table>",1),Dn=t("blockquote",null,[t("p",null,"gpasswd -a test root 将用户test加入到root组里")],-1),Sn=t("p",null,[n("/etc/passwd 存放的是用户信息"),t("br")],-1),Rn=t("p",null,[n("/etc/shadow 存放的是用户密码"),t("br")],-1),Un=t("p",null,"cat /etc/gshadow",-1),Mn=t("p",null,[n("主要组"),t("br"),n(" 附加组")],-1),Nn=a('<blockquote><p>id 查看用户的id和组<br> users 查看当前登录的用户<br> groups 查看用户属于哪个组<br> whoami 查看当前登录的用户<br> who 查看用户登录信息<br> w 查看用户登录信息</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604769.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="❀文件权限管理" tabindex="-1"><a class="header-anchor" href="#❀文件权限管理" aria-hidden="true">#</a> ❀文件权限管理</h2>',4),En={href:"https://blog.csdn.net/liu_chen_yang/article/details/115432964?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},On=t("br",null,null,-1),jn=t("br",null,null,-1),Bn=t("br",null,null,-1),Gn=t("p",null,[n("rw-r--r--"),t("br"),n(" 第一组用户权限"),t("br"),n(" 第二组用户组权限"),t("br"),n(" 第三组其他用户权限"),t("br"),n(" chmod 修改文件权限"),t("br"),n(" chmod [选项] “u/g/o/a+/-/=rwx”文件（u代表第一组uid，g代表第二组gid，o代表第三组其他用户权限，a代表全部（a会给每一组加一个））"),t("br"),n(" r=4 w=2 x=1 -=0")],-1),Fn=t("p",null,[n("属于哪个用户 属主"),t("br"),n(" 属于哪个用户组 属组")],-1),Xn=t("blockquote",null,[t("p",null,[n("chown [选项] 用户：用户组 文件名"),t("br"),n(" -R 递归修改"),t("br"),t("br"),n(" /dir1/ a.txt b.txt c.txt"),t("br"),n(" chown -R root:root /dir1")])],-1),Hn=t("p",null,[n('find ./ -maxdepth 1 -type f ! -name ".*" -exec chown xiaoming:xiaomimg'),t("br"),n(" { } ;")],-1),Vn=t("blockquote",null,[t("p",null,[n("umask 022"),t("br"),t("br"),n(" 创建一个文件默认权限是644=666-022，目录时755=777-022")])],-1),Yn=t("blockquote",null,[t("p",null,[n("getfacl 获取文件的ACL"),t("br"),n(" setfacl 设置文件的ACL"),t("br"),n(" setfacl -m 用户:权限 文件名 设置用户权限"),t("br"),n(" -x 删除指定文件的ACL（setfacl -x 用户名 文件名）"),t("br"),n(" -b 清空文件的ACL（setfacl -b 文件名）")])],-1),$n=t("p",null,"默认情况，文件给定用户的ACL要考虑到ACL中的mask值",-1),Kn=t("p",null,[n("rws/s rws/S rwt/T"),t("br"),n(" 4 2 1"),t("br"),n(" 大小写取决于执行位是否有执行权限")],-1),Wn=t("blockquote",null,[t("p",null,[n("lsattr 查看特殊属性"),t("br"),n(" chattr 设置特殊属性"),t("br"),n(" i 不能修改不能追加"),t("br"),n(" a 只可以追加，不能修改 只有root用户可以设置")])],-1),Qn=t("blockquote",null,[t("p",null,[n("chattr -i 文件名"),t("br"),n(" chattr +i 文件名")])],-1),Zn=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604710.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),Jn=t("h2",{id:"❀磁盘管理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀磁盘管理","aria-hidden":"true"},"#"),n(" ❀磁盘管理")],-1),te={href:"https://blog.csdn.net/liu_chen_yang/article/details/123474281",target:"_blank",rel:"noopener noreferrer"},ne=a("<p>磁盘管理--&gt;块设备文件 b开头--&gt;/dev/<br> 对于linux系统磁盘命名：<br> IDE接口的硬盘为 hda hdb<br> SAS，SATA，SCSI接口的硬盘 sda 分区sda1 sda2 sdb</p><p>主引导记录（MBR）:位于磁盘的第一个扇区<br> 521字节=446字节 引导程序<br> 记录4个分区表，每个16字节，64字节<br> 还有2个校验字节</p><table><thead><tr><th>fdisk</th><th>磁盘管理工具</th></tr></thead><tbody><tr><td>-l</td><td>查看所有磁盘信息</td></tr><tr><td>n</td><td>创建新分区</td></tr><tr><td>d</td><td>删除分区</td></tr><tr><td>p</td><td>列出分区表</td></tr><tr><td>w</td><td>把分区表写入硬盘并退出</td></tr><tr><td>e</td><td>扩展分区</td></tr></tbody></table>",3),ee=t("p",null,[n("MBR中只可以划分4个主分区，或者时3个主分区+1个扩展分区"),t("br"),n(" 扩展分区后，可以划分逻辑分区")],-1),se=t("blockquote",null,[t("p",null,[n("1.fdisk划分分区"),t("br"),t("br"),n(" 2.创建文件系统 mkfs.xfs /dev/sdb1（划分）"),t("br"),n("   文件系统：组织和管理文件的"),t("br"),n("   FAT16 FAT32 exFAT u盘使用-->不支持单个超过4G"),t("br"),n("   NTFS -->windows使用")])],-1),le=a("<br><p>mkfs 创建文件系统<br> -f 强制覆盖<br><br><br> 因为系统中主分区加扩展分区占用1-4的分区号，所以第一个逻辑分区为5</p><table><thead><tr><th>partprobe</th><th>刷新分区表</th></tr></thead></table><table><thead><tr><th>df</th><th>查看系统挂载信息</th></tr></thead><tbody><tr><td>-T</td><td>显示文件系统类型</td></tr><tr><td>-h</td><td>以人类可读方式显示</td></tr><tr><td>-i</td><td>查看inode情况</td></tr></tbody></table>",4),ae=t("br",null,null,-1),de=t("p",null,[n("gdisk -->划分容量超过2T磁盘分区 GPT 128个"),t("br"),n(" parted")],-1),oe=t("blockquote",null,[t("p",null,"作用：当内存不够时，使用交换分区代替内存；")],-1),re=t("blockquote",null,[t("p",null,[n("mkswap 创建交换分区"),t("br"),n(" swapon 开启交换分区"),t("br"),n("     -s 查看系统中的交换分区"),t("br"),n("     -p 设置优先级"),t("br"),n("     -a 开启所有的交换分区"),t("br"),n(" swapoff 关闭交换分区")])],-1),ie=t("blockquote",null,[t("p",null,[n("free -m 查看内存"),t("br"),n(" free 查看系统内存使用情况"),t("br"),n("   -m 以M为单位")])],-1),ce=t("blockquote",null,[t("p",null,[n("du 文件名 查看文件或目录占用磁盘大小"),t("br"),n("   -m -h 以人类可读方式显示"),t("br"),n("   -m -s 仅显示目录或文件的总计数值")])],-1),ue=t("hr",null,null,-1),pe=t("br",null,null,-1),be=t("br",null,null,-1),he=t("br",null,null,-1),me=t("br",null,null,-1),_e=t("br",null,null,-1),ge=t("br",null,null,-1),ve=t("br",null,null,-1),ke=a("<br><br><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>pvcreate</td><td>创建物理卷（pvcreate /dev/sdc1 /dev/sdd1）</td></tr><tr><td>vgcreate</td><td>创建卷组 (vgcreate 卷组名 /dev/sdc1 /dev/sdd1)</td></tr><tr><td>lvcreate</td><td>创建逻辑卷(lvcreate -L 10G -n lv0 /dev/vg0)【/dev/vg0卷组的路径】</td></tr><tr><td>-L</td><td>指定逻辑卷容量</td></tr><tr><td>-n</td><td>指定逻辑卷名字</td></tr><tr><td>.....</td><td>.............................</td></tr><tr><td>pvdisplay</td><td>显示物理卷信息</td></tr><tr><td>vgdisplay</td><td>显示卷组信息</td></tr><tr><td>lvdisplay</td><td>显示逻辑卷信息</td></tr><tr><td>...</td><td>....</td></tr><tr><td>pvscan</td><td>扫描物理卷</td></tr><tr><td>vgscan</td><td>扫描卷组</td></tr><tr><td>lvscan</td><td>扫描逻辑卷</td></tr><tr><td>...</td><td>....</td></tr><tr><td>pvremove</td><td>删除物理卷</td></tr><tr><td>vgremove</td><td>删除卷组</td></tr><tr><td>lvremove</td><td>删除逻辑卷</td></tr><tr><td>...</td><td>....</td></tr><tr><td>pvchange</td><td>修改物理卷</td></tr><tr><td>vgchange</td><td>修改卷组</td></tr><tr><td>lvchange</td><td>修改逻辑卷</td></tr><tr><td>...</td><td>....</td></tr><tr><td>vgextend</td><td>扩展卷组</td></tr><tr><td>lvextend</td><td>扩展逻辑卷</td></tr><tr><td>vgreduce</td><td>缩容卷组</td></tr><tr><td>lvreduce</td><td>缩容逻辑卷</td></tr></tbody></table>",3),fe=t("br",null,null,-1),xe=t("hr",null,null,-1),ye=t("blockquote",null,[t("p",null,[n("cache data LV 数据卷，用来缓存数据"),t("br"),n(" cache metadata LV 元数据卷，用来缓存元数据"),t("br"),n(" cache pool LV 缓存池，包含data+meta"),t("br"),n(" cache LV 缓存卷，包含真时的LV卷+缓存池")])],-1),qe=t("p",null,[n("SSD 固态硬盘"),t("br"),n(" HDD 机械硬盘")],-1),we=t("blockquote",null,[t("p",null,[n("创建缓存数据 lvcreate -L 10G -n cache_data /dev/vg0 /dev/sde1"),t("br"),t("br"),n(" 创建元数据 lvcreate -L 100M -n cache_meta /dev/vg0 /dev/sde1"),t("br"),t("br"),n(" 创建缓存池 lvconvert --type cache-pool --poolmetadata vg0/cache_meta vg0/cache_data"),t("br"),t("br"),n(" 把缓存池里的放到逻辑卷下： lvconvert --type cache --cachepool vg0/cacha_data vg0/lv0")])],-1),Pe=t("p",null,[n("创建一个新的文件系统：mkfs.xfs /dev/vg0/lv0"),t("br"),n(" 在跟目录下创建test"),t("br"),n(" 挂载根目录下的test：mount /dev/vg0/lv0 /test")],-1),Ie=a("<blockquote><p>-s 快照<br> -L 值 要设置的大小<br> -n 名字 要写的名字<br><br> 创建快照卷：lvcreate -L 2G -s -n lv_snapshot vg0/lv0<br> 测试快照卷速度： dd if=/dev/sda of=/test/mbr.bak bs=512 count=1（dd测试，if源路径，of要复制到哪路径，bs一次复制多少M，count复制多少次）<br> dd if=/dev/zero of=/test/mbr.bak bs=10M count=100（dd测试，if源路径，zero代表0，of要复制到哪路径，bs一次复制多少M，count复制多少次）<br><br><br> 在跟目录下创建/snapshot目录<br> 挂载：mount -o nouuid /dev/vg0/lv_snapshot /snapshot/（uuid相同用-o nouuid）</p></blockquote>",1),ze=t("br",null,null,-1),Te=t("br",null,null,-1),Le=t("br",null,null,-1),Ae=t("hr",null,null,-1),Ce=t("h2",{id:"❀raid-独立磁盘冗余阵列-数据安全性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀raid-独立磁盘冗余阵列-数据安全性","aria-hidden":"true"},"#"),n(" ❀RAID 独立磁盘冗余阵列 数据安全性")],-1),De=t("blockquote",null,[t("p",null,[n("硬RAID 软RAID"),t("br")])],-1),Se=t("p",null,[n("优点：提高数据的读写速度"),t("br"),n(" 缺点：数据安全性低，一旦RAID中有磁盘损坏，RAID组不可用"),t("br")],-1),Re=t("p",null,[n("优点：数据完全冗余（备份），安全性高（读效率相对提高）"),t("br"),n(" 缺点：磁盘利用率低，成本高(50%)(写性能有所降低)"),t("br")],-1),Ue=a("<p>优点：数据相对安全，允许有一块磁盘损坏（校验数据） 读性能相对有提升<br> 缺点：如果两块盘损坏，RAID不可用，写性能相对较低（做校验数据）<br> 使用率：&quot;[（n-1）/n]*100&quot;<br><br> RAID 10<br> RAID 50</p><p>软RAID实现通过mdadm</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-C</td><td>创建一个新的RAID</td></tr><tr><td>-l</td><td>指定RAID级别</td></tr><tr><td>-n</td><td>指定使用磁盘的数量</td></tr><tr><td>-x</td><td>指定热备盘</td></tr><tr><td>-S</td><td>停止RAID设备</td></tr><tr><td>-D</td><td>输出指定RAID设备的详细信息</td></tr></tbody></table>",3),Me=a('<blockquote><p>cat /proc/mdstat</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604449.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀linux系统启动流程" tabindex="-1"><a class="header-anchor" href="#❀linux系统启动流程" aria-hidden="true">#</a> ❀linux系统启动流程</h2><blockquote><p>1.BIOS加电自检（BIOS基本输入输出系统）<br> 2.MBR引导（MBR主引导）全称（ Master Boot Record）<br> 3.GRUB菜单（可以让你选择用哪个系统内核）<br> 4.加载内核<br> 5.初始化进程 init（切换系统运行的级别） systemd</p></blockquote>',4),Ne=a("<p>|</p><table><thead><tr><th>-a</th><th>输出详细信息，可以查看版本号【Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux】</th></tr></thead><tbody><tr><td>-r</td><td>显示linux操作系统内核版本号【3.10.0-957.el7.x86_64】</td></tr><tr><td>-m</td><td>显示主机的硬件名【x86_64】</td></tr></tbody></table>",2),Ee=t("blockquote",null,[t("p",null,[n("CentOs 6默认的文件系统是ext4"),t("br"),n(" CentOs 7默认的文件系统是xfs"),t("br"),n(" CentOs 6内核版本使用的是2.6"),t("br"),n(" CentOs 7内核版本使用的是3.10")])],-1),Oe=a('<blockquote><p>0 关机<br> 1 单用户（不要密码就可以进入，主要是用于做调试）<br> 2 无网络的字符界面多用户<br> 3 完整的字符界面多用户<br> 4 未启用<br> 5 图形界面<br> 6 重启</p></blockquote><p>centos 7<br> systemctl get-default 查看系统默认的运行级别<br> systemctl set-default 级别 设置系统图默认的运行级别<br> multi-user.target 字符3<br> graphical.target 图形5</p><p>破解root用户密码<br> CentOS 6：e2e 空格1 回车再按b passwd reboot<br> CentOS 7:</p><h2 id="❀重定向" tabindex="-1"><a class="header-anchor" href="#❀重定向" aria-hidden="true">#</a> ❀重定向</h2>',4),je={href:"https://blog.csdn.net/liu_chen_yang/article/details/123475295",target:"_blank",rel:"noopener noreferrer"},Be=t("p",null,[n("在页面直接显示 << （cat <<eof）[> ss，>aa，> eof，ss，aa] "),t("br"),n(" 输入追加 cat <<efo>> /a.txt (> asa，> asfs，> afo，> efo)[asa,asfs,afo] "),t("br"),n(" 输入覆盖 cat <<efo> /a.txt")],-1),Ge=t("p",null,[n('> 重定向覆盖（echo "abcabcabc" > /a.txt ）[abcabcabc]'),t("br"),n(' >> 重定向追加（echo "liuchenyang" >> /a.txt）[abcabcabc liuchenyang]')],-1),Fe=t("p",null,[n("混合输出 "),t("br"),n(" ls &>>a.txt(把ls查到的目录下所有的内容追加的a.txt文件里)")],-1),Xe=t("p",null,[n("标准错误 "),t("br"),n(" 2> （LS 2> /a.txt）[-bash: LS: 未找到命令]")],-1),He=t("blockquote",null,[t("p",null,[n('yum -y install bind bind-utils &> /dev/null && echo "ok" || echo "not ok"'),t("br"),t("br"),n(" (安装一个bind和bind-utils把安装时候输出的内容全部放到/dev/null,[/dev/null相当于一个回收站，输出到这里面就直接清空]然后如果安装成功就输出ok，安装失败就输出not ok)")])],-1),Ve=t("hr",null,null,-1),Ye=t("h2",{id:"❀周期性计划任务和任务调度",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀周期性计划任务和任务调度","aria-hidden":"true"},"#"),n(" ❀周期性计划任务和任务调度")],-1),$e={href:"https://blog.csdn.net/liu_chen_yang/article/details/123476279",target:"_blank",rel:"noopener noreferrer"},Ke=a("<p>启动：systemctl start atd<br></p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>at</td><td>设置一次性计划任务</td></tr><tr><td>atq</td><td>查询系统中一次性任务</td></tr><tr><td>atrm</td><td>删除一次性计划任务</td></tr></tbody></table>",2),We=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>crontab -e</td><td>进入执行命令的编辑模式</td></tr><tr><td>crontab -l</td><td>查看周期性计划任务</td></tr><tr><td>crontab -r</td><td>删除周期性计划任务</td></tr></tbody></table><p>设置永久的周期性计划任务：vim /etc/crontab<br> 进入vim /etc/crontab 编辑，保存退出即可；</p>",2),Qe=a("<table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>分</td><td>取值为0~59的整数</td></tr><tr><td>时</td><td>取值为0~23的任意整数</td></tr><tr><td>日</td><td>取值为1~31的任意整数</td></tr><tr><td>月</td><td>取值为1~12的任意整数</td></tr><tr><td>周</td><td>取值为0~6的任意整数，0代表星期日</td></tr></tbody></table>",1),Ze=t("blockquote",null,[t("p",null,[n("分 时 日 月 周 用户 要执行的命令"),t("br"),n(" * * * * * root 命令")])],-1),Je=t("p",null,[n("0 0 * * 3 root rm -rf /var/ftp/*"),t("br")],-1),ts=t("p",null,[n("30 2 1-7 * 1 root tar -cvzf backup.tar.gz /var/www/html"),t("br")],-1),ns=t("p",null,[n("0 0 1 * * root systemctl restart httpd"),t("br")],-1),es=t("p",null,[n("* * * * * root rm -rf /root/abc.txt"),t("br")],-1),ss=t("p",null,[n("*/2 * * * * root rm -rf /appliaction/ceshi"),t("br")],-1),ls=t("p",null,"* * * * */2 root find / -name test -type d | xargs rm -rf",-1),as=t("p",null,[n("uid 用户的唯一标识"),t("br"),n(" gid 用户组的唯一标识"),t("br"),n(" uuid 设备的唯一标识"),t("br"),n(" pid 进程的唯一标识")],-1),ds=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&amp;</span>	将命令放入后台运行
<span class="token function">jobs</span>	查看后台任务
<span class="token function">jobs</span> <span class="token parameter variable">-l</span>	查看后台进程的pid
<span class="token function">fg</span> 序号	将后台任务调度到前台
ctrl+z	将前台任务暂停放到后台
<span class="token function">bg</span> 序号	将后台暂停的任务继续执行
ctrl+c	中断前台执行的任务
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604758.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀进程管理" tabindex="-1"><a class="header-anchor" href="#❀进程管理" aria-hidden="true">#</a> ❀进程管理</h2>`,3),os={href:"https://blog.csdn.net/liu_chen_yang/article/details/123476847",target:"_blank",rel:"noopener noreferrer"},rs=t("p",null,[n("程序：存放在磁盘中的静态代码（文件）"),t("br"),n(" 进程：在内存中允许运行的程序，动态的状态"),t("br"),n(" 进程是资源调度最小的单位"),t("br"),n(" 线程：线程是存在在进程中的"),t("br"),n(" 线程（thread）是任务执行的最小单位")],-1),is=t("p",null,"进程间资源隔离，线程间资源共用",-1),cs=a("<table><thead><tr><th>ps</th><th>静态查看进程信息</th></tr></thead><tbody><tr><td>ps aux</td><td>查看进程信息(a是all全部，u是用户，x是详细信息)</td></tr><tr><td>ps elf</td><td>详细查看进程</td></tr><tr><td>ps -o</td><td>指定内容输出</td></tr><tr><td>ps -o tid</td><td>查看线程</td></tr><tr><td>ps -u</td><td>指定用户</td></tr></tbody></table>",1),us=t("blockquote",null,[t("p",null,[n("查看进程过滤出nginx的进程："),t("br"),n(" ps -ef | grep nginx")])],-1),ps=a("<table><thead><tr><th>netstat</th><th>查看网络连接情况</th></tr></thead><tbody><tr><td>-a</td><td>查看所有链接</td></tr><tr><td>-p</td><td>显示pid和进程名</td></tr><tr><td>-u</td><td>显示UDP</td></tr><tr><td>-t</td><td>显示TCP</td></tr><tr><td>-n</td><td>以数字形式显示</td></tr><tr><td>-l</td><td>显示处于监听状态的连接</td></tr></tbody></table>",1),bs=t("blockquote",null,[t("p",null,[n("查看端口，并过滤出自己想找的端口"),t("br"),n(" netstat -anput | grep 8099")])],-1),hs=a("<blockquote><p>top 动态查看进程信息<br><br> uptime 查看top第一行<br><br> lscpu 查看cpu负载的核数<br><br> load average: 0.00, 0.01, 0.05<br> 系统1分钟，5分钟，15分钟平均负载<br><br> %Cpu(s): 0.0 us, 0.0 sy, 0.0 ni,100.0 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st<br> CPU使用情况<br><br> 进程需要占用系统资源（cpu，内存，磁盘，网络，显卡）<br><br> CPU密集型<br> IO密集型<br><br> us 用户态CPU<br> sy 内核态CPU<br> ni 优先级<br> id 空闲的CPU<br> wa 等待输入输出设备的CPU<br> hi 硬中断<br> si 软中断<br> st 虚拟化占用CPU资源<br><br> KiB Mem : 995896 total, 487280 free, 121580 used, 387036 buff/cache<br><br> buff 写缓冲 解决空间问题<br> cache 读缓存 解决速率问题</p></blockquote>",1),ms=t("p",null,"renice 调整运行进程的优先级",-1),_s=t("p",null,"只有root用户可以设置负值",-1),gs=t("p",null,"nice 设置进程运行时的优先级",-1),vs=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>R</td><td>运行中的进程</td></tr><tr><td>S</td><td>睡眠状态（可以中断）</td></tr><tr><td>D</td><td>不可中断的，通常发生在IO操作</td></tr><tr><td>Z</td><td>僵尸进程</td></tr><tr><td>T</td><td>表示停止状态</td></tr><tr><td>X</td><td>退出状态</td></tr><tr><td>W</td><td>正在换页</td></tr><tr><td>&lt;</td><td>高优先级</td></tr><tr><td>N</td><td>低优先级</td></tr><tr><td>s</td><td>表示该进程下有子进程</td></tr><tr><td>l</td><td>多线程</td></tr><tr><td>+</td><td>前台运行的进程</td></tr></tbody></table>",1),ks=t("blockquote",null,[t("p",null,"子进程结束，父进程没有回收子进程")],-1),fs=t("br",null,null,-1),xs=t("br",null,null,-1),ys=t("br",null,null,-1),qs=t("br",null,null,-1),ws=t("p",null,"父进程派生子进程",-1),Ps=a('<blockquote><p>kill PID 杀进程<br> killall 进程名 根据进程名杀进程<br> pkill 根据条件杀进程</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604489.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><table><thead><tr><th>kill -l</th><th>查看进程的所有进程</th></tr></thead><tbody><tr><td>kill -1</td><td>HUP挂起进程</td></tr><tr><td>kill -2</td><td>INT中断进程（与ctrl+c以一样）</td></tr><tr><td>kill -3</td><td>QUIT退出</td></tr><tr><td>kill -9</td><td>KILL强制杀进程</td></tr><tr><td>kill -15</td><td>TERM终止进程</td></tr><tr><td>kill -18</td><td>CONT继续进程</td></tr><tr><td>kill -19</td><td>STOP暂停进程</td></tr></tbody></table>',3),Is=t("blockquote",null,[t("p",null,"kill -9 进程pid")],-1),zs=t("table",null,[t("thead",null,[t("tr",null,[t("th",null,"pgrep"),t("th",null,"根据特定条件查进程")])]),t("tbody",null,[t("tr",null,[t("td",null,"-l"),t("td",null,"根据进程名查进程的PID")]),t("tr",null,[t("td",null,"-u"),t("td",null,"根据用户名或用户id查进程的pid")])])],-1),Ts=t("figure",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191604205.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),Ls=t("h2",{id:"❀用户提权",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀用户提权","aria-hidden":"true"},"#"),n(" ❀用户提权")],-1),As={href:"https://blog.csdn.net/liu_chen_yang/article/details/123630099",target:"_blank",rel:"noopener noreferrer"},Cs=t("p",null,[n("su 切换用户"),t("br"),n(" sudo - 随用户更改环境变量")],-1),Ds=t("blockquote",null,[t("p",null,"su [选项] [用户名]")],-1),Ss=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-c或--command</td><td>执行完指定的指令后，即恢复原来的身份</td></tr><tr><td>-f或--fast</td><td>适用于csh与tsch，使shell不用去读取启动文件</td></tr><tr><td>-l或--login</td><td>改变身份时，也同时变更工作目录，以及HOME,SHELL,USER,logname,此外，也会变更PATH变量</td></tr><tr><td>-m,-p或--preserve-environment</td><td>变更身份时，不要变更环境变量</td></tr><tr><td>-s或--shell</td><td>指定要执行的shell</td></tr><tr><td>--help</td><td>显示帮助信息</td></tr><tr><td>--version</td><td>显示版本信息</td></tr></tbody></table>",1),Rs=t("p",null,"切换到linuxcool用户，但环境变量仍然是root用户的：",-1),Us=t("blockquote",null,[t("p",null,"[root@linuxcool ~]# su linuxcool")],-1),Ms=t("p",null,"切换到linuxcool用户，并改变为linuxcool用户环境变量：",-1),Ns=t("blockquote",null,[t("p",null,"[root@linuxcool ~]# su - linuxcool")],-1),Es=t("p",null,"变更帐号为 root 并传入 -f 参数给新执行的 shell：",-1),Os=t("blockquote",null,[t("p",null,"[root@linuxcool ~]# su root -f")],-1),js=t("p",null,[n("visudo 编辑sudo配置文件"),t("br"),n(" root 用户（用户不带%）"),t("br"),n(" %wheel 用户组（组带%）")],-1),Bs=t("blockquote",null,[t("p",null,"sudo -i 切换到root用户")],-1),Gs=t("h2",{id:"❀文件系统-软连接、硬链接",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#❀文件系统-软连接、硬链接","aria-hidden":"true"},"#"),n(" ❀文件系统-软连接、硬链接")],-1),Fs={href:"https://blog.csdn.net/liu_chen_yang/article/details/123629283",target:"_blank",rel:"noopener noreferrer"},Xs=t("p",null,"ln命令是linux系统中一个非常重要命令，英文全称是“link”，即链接的意思，它的功能是为某一个文件在另外一个位置建立一个同步的链接。 一种是hard link，又称为硬链接；另一种是symbolic link，又称为符号链接。",-1),Hs=t("p",null,"通俗一点理解，可以把硬链接当成源文件的副本，他和源文件一样的大小，但是事实上却不占任何空间。符号链接可以理解为类似windows一样的快捷方式。",-1),Vs=t("blockquote",null,[t("p",null,[n("inode：文件元数据-->权限 归属 时间 类型·block位置"),t("br"),n(" block：磁盘IO的最小单位 默认4K=8个扇区"),t("br"),t("br"),n(" 一个文件占用一个inode，至少占用一个block")])],-1),Ys=t("p",null,[n("目录本身就是特殊的文件"),t("br"),n(" 目录的block存放的是目录下文件和目录的名字")],-1),$s=t("blockquote",null,[t("p",null,[n("ll命令查看结果，其中-rw-------1后面有个1就是硬链接数"),t("br"),n(" 硬链接是文件的另一个入口"),t("br"),n(" 软连接类似于windows的快捷方式")])],-1),Ks=t("blockquote",null,[t("p",null,[n("1.硬链接的inode号相同，软连接inode不同"),t("br"),n("   diff 比较两个文件是否相同（返回信息是不同，不返回信息是相同）"),t("br"),n("   vimdiff 比较两个文件是否相同"),t("br"),n(" 2.删除或重命名源文件对硬链接没有影响，软连接不可用。"),t("br"),n(" 3.硬链接不能跨文件系统；软链接可以跨文件系统。"),t("br"),n(" 4.目录不能创建硬链接；目录可以创建软链接"),t("br"),n(" 5.创建硬链接是ln； 创建软连接是ln -s")])],-1),Ws=t("blockquote",null,[t("p",null,"ln [参数] [源文件或目录] [目标文件或目录]")],-1),Qs=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-b</td><td>为每个已存在的目标文件创建备份文件</td></tr><tr><td>-d</td><td>此选项允许“root”用户建立目录的硬链接</td></tr><tr><td>-f</td><td>强制创建链接，即使目标文件已经存在</td></tr><tr><td>-n</td><td>把指向目录的符号链接视为一个普通文件</td></tr><tr><td>-i</td><td>交互模式，若目标文件已经存在，则提示用户确认进行覆盖</td></tr><tr><td>-s</td><td>对源文件建立符号链接，而非硬链接</td></tr><tr><td>-v</td><td>详细信息模式，输出指令的详细执行过程</td></tr></tbody></table>",1),Zs=a("<p>为源文件file.txt创建硬链接file_1：</p><blockquote><p>[root@linuxcool ~ ]# ln /root/dir/file.txt ./file_1</p></blockquote><p>使用ln命令的“-s”参数来创建目录的符号链接，并使用ls命令来查看链接文件的详细信息：</p><blockquote><p>[root@linuxcool ~]# ln -s dir file<br> [root@linuxcool ~]# ls -l<br> 总用量 4<br> -rw-------. 1 root root 1138 3月 11 14:48 anaconda-ks.cfg<br> drwxr-xr-x. 2 root root 36 4月 3 08:47 test<br> lrwxrwxrwx. 1 root root 4 4月 3 08:54 file -&gt; dir</p></blockquote><p>使用ln命令的“-v”参数来输出命令的详细执行过程：</p><blockquote><p>[root@linuxcool ~]# ln -v /root/dir/file.txt ./file_1<br> &#39;./file_1&#39; =&gt; &#39;/root/dir/file.txt&#39;</p></blockquote><p>使用ln命令的“-b”命令来创建目标文件的备份文件，并使用ls命令来查看：</p><blockquote><p>[root@linuxcool ~]# ln -b /root/dir/file.txt ./file_1<br> [root@linuxcool ~]# ls<br> anaconda-ks.cfg file_1 file_1~ dir</p></blockquote>",8),Js=t("p",null,[n("1.df -Th 查看磁盘空间"),t("br"),n(" 2.df -Thi 查看inode情况"),t("br"),n(" inode耗尽引发的故障")],-1),tl=t("p",null,[n("1.删除不用的小文件"),t("br"),n(" 2.备份后，重新创建文件系统")],-1),nl=t("br",null,null,-1),el=t("br",null,null,-1),sl=t("p",null,[t("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191603026.png",alt:"",loading:"lazy"}),n("❀日志管理")],-1),ll={href:"https://blog.csdn.net/liu_chen_yang/article/details/123630727",target:"_blank",rel:"noopener noreferrer"},al=t("blockquote",null,[t("p",null,[n("/var/log 一般都存在这里面"),t("br"),n(" /var/log/messages 系统日志")])],-1),dl=t("p",null,[n("从CentOs6开始，日志由系统中的rsyslog服务管理"),t("br"),n(" 日志存放在/var/log目录下")],-1),ol=t("blockquote",null,[t("p",null,[n("dmesg 查看内核和硬件相关的日志"),t("br"),t("br"),n(" last 查看用户登录的记录"),t("br"),t("br"),n(" lastlog 查看用户最后一次登录的时间"),t("br"),t("br"),n(" lastb 记录用户登录失败的信息"),t("br"),t("br"),n(" logrotate 实现日志轮割")])],-1),rl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>0</td><td>emerg 紧急（会导致主机系统不可用）</td></tr><tr><td>1</td><td>alert 警告（必须马上处理）</td></tr><tr><td>2</td><td>crit 严重（比较严重）</td></tr><tr><td>3</td><td>err 错误信息</td></tr><tr><td>4</td><td>warning 提醒（警告）</td></tr><tr><td>5</td><td>notice 注意</td></tr><tr><td>6</td><td>info 一般信息</td></tr><tr><td>7</td><td>debug 程序或系统的调试信息</td></tr><tr><td>8</td><td>none 空，不记录日志</td></tr></tbody></table>",1),il=t("blockquote",null,[t("p",null,[n("在周期计划性任务里写（crontab -e）cp file1 file1-$(date +%Y%m%d) && >"),t("br"),n(" file1【在周期计划性任务中，实现把当前目录下的file1复制一份重新创建一个叫file1-时间（注意date里面的年月日..要加转义\\）然后重定向清空file1】"),t("br"),t("br"),n(" 在crontab中%是有特殊含义的，表示换的意思。如果要用的话，必须进行转义%，如经常用的date"),t("br"),t("code",null,"+%Y%m%d"),n("在crontab中是不会执行的，应该换成date"),t("code",null,"+\\%Y\\%m\\%d")])],-1),cl=t("p",null,[n("系统的日志由服务rsyslog管理"),t("br"),n(" 日志集中系统:")],-1),ul=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token punctuation">[</span>root@nginx-1 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/rsyslog.conf </span>
 <span class="token number">15</span> <span class="token variable">$ModLoad</span> imudp
 <span class="token number">16</span> <span class="token variable">$UDPServerRun</span> <span class="token number">514</span>

<span class="token punctuation">[</span>root@nginx-1 ~<span class="token punctuation">]</span><span class="token comment">#systemctl restart rsyslog  重启服务</span>

<span class="token comment">#先安装yum -y install net-tools配置网络要用的比如ifconfig</span>
<span class="token punctuation">[</span>root@nginx-1 ~<span class="token punctuation">]</span><span class="token comment">#netstat -anput|grep 514  </span>

<span class="token comment">#查看是否开放514号端口的服务 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),pl=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#添加服务端信息</span>
<span class="token punctuation">[</span>root@nginx-2 ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/rsyslog.conf</span>
	<span class="token number">90</span> *.* @192.168.2.11:514  
	* 所有的服务 <span class="token builtin class-name">.</span> 表示以上级别 * 所有级别 
	@ 表示UDP @@ 表示TCP   服务端ip:端口 

<span class="token comment">#重启rsyslog服务</span>
<span class="token punctuation">[</span>root@nginx-2 ~<span class="token punctuation">]</span><span class="token comment">#systemctl restart rsyslog </span>

<span class="token comment">#测试时使用tail -f 观察服务端/var/log/messages日志的变化</span>
<span class="token punctuation">[</span>root@nginx-2 ~<span class="token punctuation">]</span><span class="token comment">#logger &quot;123123&quot;  产生一条日志测试 </span>
<span class="token punctuation">[</span>root@nginx-2 ~<span class="token punctuation">]</span><span class="token comment">#tailf /var/log/messages</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>. 记录包含该等级及以上级别的信息<br> .= 只记录当前等级的信息<br> ! 除了该等级都记录</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412191603399.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="❀网络管理" tabindex="-1"><a class="header-anchor" href="#❀网络管理" aria-hidden="true">#</a> ❀网络管理</h2><br>`,5),bl=t("br",null,null,-1),hl=t("br",null,null,-1),ml={href:"https://blog.csdn.net/liu_chen_yang/article/details/123633511",target:"_blank",rel:"noopener noreferrer"},_l=t("blockquote",null,[t("p",null,[n("ifconfig 查看或管理网络信息"),t("br"),n(" ifconfig ens33 查看ens33信息"),t("br"),n(" ifconfig ens33 192.168.2.100/24")])],-1),gl=t("blockquote",null,[t("p",null,"ifconfig [参数]")],-1),vl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>add&lt;地址&gt;</td><td>设置网络设备IPv6的IP地址</td></tr><tr><td>del&lt;地址&gt;</td><td>删除网络设备IPv6的IP地址</td></tr><tr><td>down</td><td>关闭指定的网络设备</td></tr><tr><td>up</td><td>启动指定的网络设备</td></tr><tr><td>IP地址</td><td>指定网络设备的IP地址</td></tr></tbody></table>",1),kl=a(`<p>显示网络设备信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
eth0   Link encap:Ethernet HWaddr 00:50:56:0A:0B:0C       
       inet addr:192.168.0.3 Bcast:192.168.0.255 Mask:255.255.255.0
       inet6 addr: fe80::250:56ff:fe0a:b0c/64 Scope:Link     
       UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1      
       RX packets:172220 errors:0 dropped:0 overruns:0 frame:0      
       TX packets:132379 errors:0 dropped:0 overruns:0 carrier:0 
       collisions:0 txqueuelen:1000       
       RX bytes:87101880 <span class="token punctuation">(</span><span class="token number">83.0</span> MiB<span class="token punctuation">)</span> TX bytes:41576123 <span class="token punctuation">(</span><span class="token number">39.6</span> MiB<span class="token punctuation">)</span> 
       Interrupt:185 Base address:0x2024  
lo    Link encap:Local Loopback       
      inet addr:127.0.0.1 Mask:255.0.0.0      
      inet6 addr: ::1/128 Scope:Host      
      UP LOOPBACK RUNNING MTU:16436 Metric:1      
      RX packets:2022 errors:0 dropped:0 overruns:0 frame:0      
      TX packets:2022 errors:0 dropped:0 overruns:0 carrier:0   
      collisions:0 txqueuelen:0       
      RX bytes:2459063 <span class="token punctuation">(</span><span class="token number">2.3</span> MiB<span class="token punctuation">)</span> 
      TX bytes:2459063 <span class="token punctuation">(</span><span class="token number">2.3</span> MiB<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动关闭指定网卡：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 down</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 up </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>为网卡配置和删除IPv6地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 add 33ffe:3240:800:1005::2/64</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 del 33ffe:3240:800:1005::2/64</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>用ifconfig修改MAC地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 down</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 up</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth1 hw ether 00:1D:1C:1D:1E </span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth1 up</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置IP地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.1.56 </span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.1.56 netmask 255.255.255.0</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.1.56 netmask 255.255.255.0 broadcast 192.168.1.255</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,11),fl={href:"https://blog.csdn.net/liu_chen_yang/article/details/123633638",target:"_blank",rel:"noopener noreferrer"},xl=t("blockquote",null,[t("p",null,[n("ip 网络管理命令"),t("br"),n(" ip a 查看网卡信息"),t("br"),n(" ip l 查看网络连接情况")])],-1),yl=t("blockquote",null,[t("p",null,"ip [参数]")],-1),ql=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-s</td><td>输出更详细的信息</td></tr><tr><td>-f</td><td>强制使用指定的协议族</td></tr><tr><td>-4</td><td>指定使用的网络层协议是IPv4协议</td></tr><tr><td>-6</td><td>指定使用的网络层协议是IPv6协议</td></tr><tr><td>-r</td><td>显示主机时，不使用IP地址，而使用主机的域名</td></tr></tbody></table>",1),wl=a(`<p>用ip命令显示网络设备的运行状态:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip link list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-s参数输出更详细的信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip -s link list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示核心路由表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip route list</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip route show</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>显示邻居路由表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip neigh list</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ip neigh show</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,9),Pl={href:"https://blog.csdn.net/liu_chen_yang/article/details/123633711",target:"_blank",rel:"noopener noreferrer"},Il=t("p",null,"ss 查看网络链接",-1),zl=t("blockquote",null,[t("p",null,"ss [参数]")],-1),Tl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-n</td><td>不解析服务名称，已数字方式显示</td></tr><tr><td>-a</td><td>显示所有套接字</td></tr><tr><td>-l</td><td>显示处于监听状态的套接字</td></tr><tr><td>-o</td><td>显示计时器信息</td></tr><tr><td>-e</td><td>显示详细的套接字信息</td></tr><tr><td>-m</td><td>显示套接字的内存使用情况</td></tr><tr><td>-p</td><td>显示使用套接字的进程</td></tr><tr><td>-i</td><td>显示内部的TCP信息</td></tr><tr><td>-s</td><td>显示套接字使用概况</td></tr><tr><td>-4</td><td>仅显示ipv4的套接字</td></tr><tr><td>-6</td><td>仅显示ipv6的套接字</td></tr><tr><td>-0</td><td>显示PACKET套接字</td></tr><tr><td>-t</td><td>只显示TCP套接字</td></tr><tr><td>-u</td><td>只显示UDP套接字</td></tr><tr><td>-d</td><td>只显示DCCP套接字</td></tr><tr><td>-w</td><td>只显示RAW套接字</td></tr><tr><td>-x</td><td>只显示 Unix套接字</td></tr><tr><td>-D</td><td>将原始TCP套接字信息转储到文件</td></tr></tbody></table>",1),Ll=a(`<p>显示TCP套接字：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ss -t -a </span>
State     Recv-Q     Send-Q     Local Address:Port     Peer Address:Port   
LISTEN    <span class="token number">0</span>          <span class="token number">128</span>        <span class="token number">0.0</span>.0.0:ssh            <span class="token number">0.0</span>.0.0:*                                
ESTAB     <span class="token number">0</span>          <span class="token number">52</span>         <span class="token number">192.168</span>.60.19:ssh      <span class="token number">192.168</span>.30.21:59321               
LISTEN    <span class="token number">0</span>          <span class="token number">128</span>        *:websm                *:*               
LISTEN    <span class="token number">0</span>          <span class="token number">128</span>        <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:ssh               <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:* 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示UDP套接字：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ss -u -a</span>
State     Recv-Q     Send-Q     Local Address:Port     Peer Address:Port              
UNCONN    <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">0.0</span>.0.0:bootpc         <span class="token number">0.0</span>.0.0:*                 
UNCONN    <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">127.0</span>.0.1:323          <span class="token number">0.0</span>.0.0:*                 
UNCONN    <span class="token number">0</span>          <span class="token number">0</span>          <span class="token punctuation">[</span>::1<span class="token punctuation">]</span>:323              <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:*  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示套接字使用概况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ss -s</span>
Total: <span class="token number">185</span>
TCP:   <span class="token number">4</span> <span class="token punctuation">(</span>estab <span class="token number">1</span>, closed <span class="token number">0</span>, orphaned <span class="token number">0</span>, timewait <span class="token number">0</span><span class="token punctuation">)</span>
Transport Total     IP        IPv6
RAW       <span class="token number">1</span>         <span class="token number">0</span>         <span class="token number">1</span>        
UDP       <span class="token number">3</span>         <span class="token number">2</span>         <span class="token number">1</span>        
TCP       <span class="token number">4</span>         <span class="token number">2</span>         <span class="token number">2</span>        
INET      <span class="token number">8</span>         <span class="token number">4</span>         <span class="token number">4</span>        
FRAG      <span class="token number">0</span>         <span class="token number">0</span>         <span class="token number">0</span>        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,7),Al={href:"https://blog.csdn.net/liu_chen_yang/article/details/123633888",target:"_blank",rel:"noopener noreferrer"},Cl=t("blockquote",null,[t("p",null,"netstat 查看网络连接情况")],-1),Dl=t("blockquote",null,[t("p",null,"netstat [参数]")],-1),Sl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>查看所有链接</td></tr><tr><td>-p</td><td>显示pid和进程名</td></tr><tr><td>-u</td><td>显示UDP</td></tr><tr><td>-t</td><td>显示TCP</td></tr><tr><td>-n</td><td>以数字形式显示</td></tr><tr><td>-l</td><td>显示处于监听状态的连接</td></tr></tbody></table>",1),Rl=a(`<p>显示详细的网络状况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># netstat -a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示当前户籍UDP连接状况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># netstat -nu</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示UDP端口号的使用情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># netstat -apu </span>
Active Internet connections <span class="token punctuation">(</span>servers and established<span class="token punctuation">)</span>
Proto Recv-Q Send-Q Local Address  Foreign Address  State  PID/Program name    
udp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:bootpc          <span class="token number">0.0</span>.0.0:*      <span class="token number">4000</span>/dhclient       
udp        <span class="token number">0</span>      <span class="token number">0</span> localhost:323           <span class="token number">0.0</span>.0.0:*      <span class="token number">3725</span>/chronyd        
udp6       <span class="token number">0</span>      <span class="token number">0</span> localhost:323           <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:*         <span class="token number">3725</span>/chronyd 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示网卡列表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># netstat -i </span>
Kernel Interface table 
Iface MTU Met  RX-OK  RX-ERR  RX-DRP RX-OVR  TX-OK TX-ERR TX-DRP TX-OVR Flg 
eth0 <span class="token number">1500</span>   <span class="token number">0</span>  <span class="token number">181864</span>   <span class="token number">0</span>      <span class="token number">0</span>       <span class="token number">0</span>     <span class="token number">141278</span>   <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>    BMRU 
lo   <span class="token number">16436</span>  <span class="token number">0</span>   <span class="token number">3362</span>    <span class="token number">0</span>      <span class="token number">0</span>       <span class="token number">0</span>     <span class="token number">3362</span>     <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">0</span>    LRU
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显示组播组的关系：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># netstat -g </span>
IPv6/IPv4 Group Memberships Interface    
RefCnt Group 
--------------- ------ --------------------- 
lo        <span class="token number">1</span>   ALL-SYSTEMS.MCAST.NET 
eth0      <span class="token number">1</span>   ALL-SYSTEMS.MCAST.NET lo       <span class="token number">1</span>   ff02::1 
eth0      <span class="token number">1</span>   ff02::1:ff0a:b0c eth0          <span class="token number">1</span>   ff02::1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,11),Ul={href:"https://blog.csdn.net/liu_chen_yang/article/details/123634089",target:"_blank",rel:"noopener noreferrer"},Ml=t("blockquote",null,[t("p",null,"hostname [参数]")],-1),Nl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>显示主机别名</td></tr><tr><td>-d</td><td>显示DNS域名</td></tr><tr><td>-f</td><td>显示FQDN名称</td></tr><tr><td>-i</td><td>显示主机的ip地址</td></tr><tr><td>-s</td><td>显示短主机名称，在第一个点处截断</td></tr><tr><td>-y</td><td>显示NIS域名</td></tr></tbody></table>",1),El=a(`<p>查看主机名：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">hostname</span>		查看主机名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改主机名：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">hostname</span> 主机名	修改主机名

<span class="token comment">#修改的主机名是临时生效的</span>
永久生效：
<span class="token number">1</span>.修改配置文件
/etc/hostname
<span class="token number">2</span>.hostnamectl set-hostname 主机名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看主机ip地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># hostname -I	查看主机的ip地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-a参数显示主机别名：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># hostname -a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-i参数显示主机的ip地址：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># hostname -i</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-y参数显示NIS域名：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># hostname -y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,13),Ol=t("blockquote",null,[t("p",null,"route 路由管理命令")],-1),jl={href:"https://blog.csdn.net/liu_chen_yang/article/details/123634136",target:"_blank",rel:"noopener noreferrer"},Bl=t("blockquote",null,[t("p",null,"route [参数]")],-1),Gl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-A</td><td>设置地址类型（ 默认IPv4）</td></tr><tr><td>-C</td><td>打印linux核心的路由缓存</td></tr><tr><td>-v</td><td>详细信息模式</td></tr><tr><td>-n</td><td>不执行DNS反向查找，直接显示数字形式的ip地址</td></tr><tr><td>-e</td><td>netstat格式显示路由表</td></tr><tr><td>-net</td><td>到一个网络的路由表</td></tr><tr><td>-host</td><td>到一个主机的路由表</td></tr><tr><td>Add</td><td>增加指定的路由记录</td></tr><tr><td>Del</td><td>删除指定的路由记录</td></tr><tr><td>Target</td><td>目的网络或目的主机</td></tr><tr><td>gw</td><td>设置默认网关</td></tr><tr><td>mss</td><td>设置TCP的最大区块长度（MSS），单位MB</td></tr><tr><td>window</td><td>指定通过路由表的TCP连接的TCP窗口大小</td></tr><tr><td>dev</td><td>路由记录所表示的网络接口</td></tr></tbody></table>",1),Fl=a(`<p>显示当前路由：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route</span>
Kernel IP routing table
Destination     Gateway      Genmask        Flags Metric Ref      Use Iface
default        _gateway      <span class="token number">0.0</span>.0.0         UG    <span class="token number">100</span>    <span class="token number">0</span>        <span class="token number">0</span> ens192
<span class="token number">192.168</span>.60.0    <span class="token number">0.0</span>.0.0      <span class="token number">255.255</span>.255.0   U     <span class="token number">100</span>    <span class="token number">0</span>        <span class="token number">0</span> ens192
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加一条路由记录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route add -net 192.168.60.11 netmask 192.168.60.1 dev ens192</span>

<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route add -net 192.168.3.0 netmask 255.255.255.0 ens33</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除路由记录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment">#  route del -net 192.168.60.11 netmask 192.168.60.1 dev ens192 </span>

<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route del -net 192.168.3.0 netmask 255.255.255.0 ens33</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加和删除默认网关：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route add default gw 192.168.60.1</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># route del default gw 192.168.60.1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,9),Xl={href:"https://blog.csdn.net/liu_chen_yang/article/details/123635418",target:"_blank",rel:"noopener noreferrer"},Hl=t("blockquote",null,[t("p",null,"tcpdump [参数]")],-1),Vl=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>尝试将网络和广播地址转换成名称</td></tr><tr><td>-c&lt;数据包数目&gt;</td><td>收到指定的数据包数目后，就停止进行倾倒操作</td></tr><tr><td>-d</td><td>把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出</td></tr><tr><td>-dd</td><td>把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出</td></tr><tr><td>-ddd</td><td>把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出</td></tr><tr><td>-e</td><td>在每列倾倒资料上显示连接层级的文件头</td></tr><tr><td>-f</td><td>用数字显示网际网络地址</td></tr><tr><td>-F&lt;表达文件&gt;</td><td>指定内含表达方式的文件</td></tr><tr><td>-i&lt;网络界面&gt;</td><td>使用指定的网络截面送出数据包</td></tr><tr><td>-l</td><td>使用标准输出列的缓冲区</td></tr><tr><td>-n</td><td>不把主机的网络地址转换成名字</td></tr><tr><td>-N</td><td>不列出域名</td></tr><tr><td>-O</td><td>不将数据包编码最佳化</td></tr><tr><td>-p</td><td>不让网络界面进入混杂模式</td></tr><tr><td>-q</td><td>快速输出，仅列出少数的传输协议信息</td></tr><tr><td>-r&lt;数据包文件&gt;</td><td>从指定的文件读取数据包数据</td></tr><tr><td>-s&lt;数据包大小&gt;</td><td>设置每个数据包的大小</td></tr><tr><td>-S</td><td>用绝对而非相对数值列出TCP关联数</td></tr><tr><td>-t</td><td>在每列倾倒资料上不显示时间戳记</td></tr><tr><td>-tt</td><td>在每列倾倒资料上显示未经格式化的时间戳记</td></tr><tr><td>-T&lt;数据包类型&gt;</td><td>强制将表达方式所指定的数据包转译成设置的数据包类型</td></tr><tr><td>-v</td><td>详细显示指令执行过程</td></tr><tr><td>-vv</td><td>更详细显示指令执行过程</td></tr><tr><td>-x</td><td>用十六进制字码列出数据包资料</td></tr><tr><td>-w&lt;数据包文件&gt;</td><td>把数据包数据写入指定的文件</td></tr><tr><td>-i</td><td>指定网卡</td></tr><tr><td>-nn</td><td>显示ip不显示主机名</td></tr><tr><td>port</td><td>指定端口</td></tr></tbody></table>",1),Yl=a(`<p>监视指定网络接口的数据包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump -i eth1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>监视指定主机的数据包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump host linuxcool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>截获主机192.168.10.10 和主机192.168.10.20 或192.168.10.30的通信:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump host 192.168.10.10 and \\ (192.168.10.20 or 192.168.10.30 \\)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>抓取80端口的HTTP报文，以文本形式展示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump -i any port 80 -A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,9),$l={href:"https://blog.csdn.net/liu_chen_yang/article/details/123638241",target:"_blank",rel:"noopener noreferrer"},Kl=t("blockquote",null,[t("p",null,"traceroute 跟踪路由")],-1),Wl=t("blockquote",null,[t("p",null,"traceroute [参数] [域名或者IP]")],-1),Ql=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-d</td><td>使用Socket层级的排错功能</td></tr><tr><td>-f&lt;存活数值&gt;</td><td>设置第一个检测数据包的存活数值TTL的大小</td></tr><tr><td>-F</td><td>设置勿离断位</td></tr><tr><td>-g&lt;网关&gt;</td><td>设置来源路由网关，最多可设置8个</td></tr><tr><td>-i&lt;网络界面&gt;</td><td>使用指定的网络界面送出数据包</td></tr><tr><td>-I</td><td>使用ICMP回应取代UDP资料信息</td></tr><tr><td>-m&lt;存活数值&gt;</td><td>设置检测数据包的最大存活数值TTL的大小</td></tr><tr><td>-n</td><td>直接使用IP地址而非主机名称</td></tr><tr><td>-p&lt;通信端口&gt;</td><td>设置UDP传输协议的通信端口</td></tr><tr><td>-r</td><td>忽略普通的Routing Table，直接将数据包送到远端主机上</td></tr><tr><td>-s&lt;来源地址&gt;</td><td>设置本地主机送出数据包的IP地址</td></tr><tr><td>-t&lt;服务类型&gt;</td><td>设置检测数据包的TOS数值</td></tr><tr><td>-v</td><td>详细显示指令的执行过程</td></tr><tr><td>-w</td><td>设置等待远端主机回报的时间</td></tr><tr><td>-x</td><td>开启或关闭数据包的正确性检验</td></tr></tbody></table>",1),Zl=t("br",null,null,-1),Jl=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># traceroute www.linuxprobe.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>跳数设置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># traceroute -m 7 www.linuxprobe.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示IP地址，不查主机名 ：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># traceroute -n www.linuxprobe.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把探测包的个数设置为值4：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># traceroute -q 4 www.linuxprobe.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把对外发探测包的等待响应时间设置为3秒：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># traceroute -w 3 www.linuxprobe.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,10),ta={href:"https://blog.csdn.net/liu_chen_yang/article/details/123639757",target:"_blank",rel:"noopener noreferrer"},na=t("p",null,"ifup命令用于激活指定的网络接口。ifup命令会去读取/etc/sysconfig/network-scripts/目录下的相关网络接口的配置文件，并根据配置文件的内容来激活该网络接口。",-1),ea=t("p",null,"注意：网络接口名称必须是/etc/sysconfig/network-scripts/目录配置文件中设置的才可以。如果使用ifconfig命令改变了网络接口后，ifup命令就不会识别了。因为ifup命令会对比当前网络的参数与/etc/sysconfig/network-scripts/中配置文件的内容是否相符。",-1),sa=t("blockquote",null,[t("p",null,"ifup [网络接口]")],-1),la=a(`<p>激活网络接口eth0：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifup eth0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,3),aa={href:"https://blog.csdn.net/liu_chen_yang/article/details/123639757",target:"_blank",rel:"noopener noreferrer"},da=t("p",null,"ifdown命令用于禁用指定的网络接口。该命令会去读取/etc/sysconfig/network-scripts/目录下的相关网络接口的配置文件，并根据配置文件的内容来关闭该网络接口。",-1),oa=t("p",null,"注意：网络接口名称必须是/etc/sysconfig/network-scripts/目录配置文件中设置的才可以。如果使用ifconfig命令改变了网络接口后，ifdown命令就不会识别了。因为ifdown命令会对比当前网络的参数与/etc/sysconfig/network-scripts/中配置文件的内容是否相符。",-1),ra=t("blockquote",null,[t("p",null,"ifdown [网络接口]")],-1),ia=a(`<p>禁用网络接口eth0：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># ifdown eth0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,3),ca={href:"https://blog.csdn.net/liu_chen_yang/article/details/123638776",target:"_blank",rel:"noopener noreferrer"},ua=t("blockquote",null,[t("p",null,"arp [参数] [IP]")],-1),pa=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>显示arp缓存的所有条目，主机位可选参数</td></tr><tr><td>-H</td><td>指定arp指令使用的地址类型</td></tr><tr><td>-d</td><td>从arp缓存中删除指定主机的arp条目</td></tr><tr><td>-D</td><td>使用指定接口的硬件地址</td></tr><tr><td>-e</td><td>以linux的显示风格显示arp缓存中的条目</td></tr><tr><td>-i</td><td>指定要操作arp缓存的网络接口</td></tr><tr><td>-n</td><td>以数字方式显示arp缓存中的条目</td></tr><tr><td>-v</td><td>显示详细的arp缓存条目，包括缓存条目的统计信息</td></tr><tr><td>-f</td><td>设置主机的IP地址与MAC地址的静态映射</td></tr></tbody></table>",1),ba=a(`<p>显示本机arp缓存中所有记录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># arp</span>
Address       HWtype     HWaddress         Flags Mask          Iface    
gateway       ether      00:03:0f:81:6b:f1    C                ens160
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以数字方式显示指定主机arp缓存条目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># arp -n 192.168.60.1</span>
Address           HWtype  HWaddress           Flags Mask         Iface
<span class="token number">192.168</span>.60.1      ether   00:03:0f:81:6b:f1   C                  ens160
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除接口eth1上的192.168.60.1的arp表中的项：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># arp -i eth1 -d 192.168.60.1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用eth1的MAC地址回答eth0上的192.168.60.2的arp请求：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># arp -i eth0 -Ds 192.168.60.2 eth1 pub</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,9),ha={href:"https://blog.csdn.net/liu_chen_yang/article/details/123678329",target:"_blank",rel:"noopener noreferrer"},ma=t("blockquote",null,[t("p",null,"journalctl 查看所有日志")],-1),_a=t("blockquote",null,[t("p",null,"journalctl [参数]")],-1),ga=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-k</td><td>查看内核日志</td></tr><tr><td>-b</td><td>查看系统本次启动的日志</td></tr><tr><td>-u</td><td>查看指定服务的日志</td></tr><tr><td>-n</td><td>指定日志条数</td></tr><tr><td>-f</td><td>追踪日志</td></tr><tr><td>_PID</td><td>根据进程id查</td></tr><tr><td>-p</td><td>根据级别查看</td></tr><tr><td>- -since</td><td>查看指定时间的日志</td></tr><tr><td>- -disk-usage</td><td>查看当前日志占用磁盘的空间的总大小</td></tr></tbody></table>",1),va=a(`<p>查看所有日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看内核日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl -k </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看系统本次启动的日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl -b </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看httpd的日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl -u httpd</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看最近发生的20条日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl -n 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>追踪日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># journalctl -f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,13),ka={href:"https://blog.csdn.net/liu_chen_yang/article/details/123678349",target:"_blank",rel:"noopener noreferrer"},fa=t("blockquote",null,[t("p",null,"nmap [参数]")],-1),xa=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>--traceroute</td><td>扫描主机端口并跟踪路由</td></tr><tr><td>-p</td><td>扫描指定端口和端口范围</td></tr><tr><td>-sP</td><td>对目标主机进行ping扫描</td></tr><tr><td>-A</td><td>使用高级功能进行扫描</td></tr><tr><td>-PE</td><td>强制执行直接的ICMPping</td></tr><tr><td>-sV</td><td>探测服务版本信息</td></tr><tr><td>-d</td><td>增加调试信息地输出</td></tr><tr><td>-PU</td><td>发送udp ping</td></tr><tr><td>-ps</td><td>发送同步（SYN）报文</td></tr></tbody></table>",1),ya=a(`<p>扫描主机并跟踪路由：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nmap --traceroute www.linuxcool.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-p参数探测80、443端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nmap -p80,443 www.linuxcool.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>探测服务器的1-10000端口范围：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nmap -p1-10000 www.linuxcool.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用-A参数进行高级扫描：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nmap -A www.linuxcool.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,9),qa={href:"https://blog.csdn.net/liu_chen_yang/article/details/123678349",target:"_blank",rel:"noopener noreferrer"},wa=t("blockquote",null,[t("p",null,"nc [参数]")],-1),Pa=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-l</td><td>使用监听模式，管控传入的资料</td></tr><tr><td>-p</td><td>设置本地主机使用的通信端口</td></tr><tr><td>-s</td><td>设置本地主机送出数据包的IP地址</td></tr><tr><td>-u</td><td>使用UDP传输协议</td></tr><tr><td>-v</td><td>显示指令执行过程</td></tr><tr><td>-w</td><td>设置等待连线的时间</td></tr><tr><td>-z</td><td>使用0输入/输出模式，只在扫描通信端口时使用</td></tr></tbody></table>",1),Ia=a(`<p>扫描80端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nc -nvv 192.168.3.1 80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>扫描UDP端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nc -u -z -w2 192.168.0.1 1-1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>扫描TCP端口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># nc -v -z -w2 192.168.0.3 1-100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,7),za={href:"https://blog.csdn.net/liu_chen_yang/article/details/123678773",target:"_blank",rel:"noopener noreferrer"},Ta=t("blockquote",null,[t("p",null,"history [参数] [目录]")],-1),La=a("<table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>将当前shell会话的历史命令追加到命令历史文件中,命令历史文件是保存历史命令的配置文件</td></tr><tr><td>-c</td><td>清空当前历史命令列表</td></tr><tr><td>-d</td><td>删除历史命令列表中指定序号的命令</td></tr><tr><td>-n</td><td>从命令历史文件中读取本次Shell会话开始时没有读取的历史命令</td></tr><tr><td>-r</td><td>读取命令历史文件到当前的Shell历史命令内存缓冲区</td></tr><tr><td>-s</td><td>将指定的命令作为单独的条目加入命令历史内存缓冲区。在执行添加之前先删除命令历史内存缓冲区中最后一条命令</td></tr><tr><td>-w</td><td>把当前的shell历史命令内存缓冲区的内容写入命令历史文件</td></tr><tr><td>!num</td><td>num值是执行history前面显示的行号，也称历史记录号；  直接执行选择的命令</td></tr></tbody></table>",1),Aa=a(`<p>查看所有的历史记录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示最近的10条命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history 10  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将本次登录的命令写入历史文件中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history -w</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将命令历史文件中的内容读入到目前shell的history记忆中 ：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history -r  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将当前Shell会话的历史命令追加到命令历史文件中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history -a  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>清空当前历史命令列表：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history -c </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行已经执行过又想执行的命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># history</span>
    <span class="token number">1</span>  <span class="token function">ls</span>
    <span class="token number">2</span>  <span class="token function">vim</span> a
    <span class="token number">3</span>  <span class="token function">ls</span>
    <span class="token number">4</span>  journalctl <span class="token parameter variable">-d</span>
    <span class="token number">5</span>  journalctl <span class="token parameter variable">-b</span>
<span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># !3</span>
abc <span class="token number">123</span> lcy linux <span class="token function">history</span> ml ss 
<span class="token function">dd</span> laks <span class="token number">111</span> <span class="token function">vi</span> go sl sd fsg a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,15);function Ca(Da,Sa){const s=o("font"),d=o("ExternalLinkIcon");return i(),c("div",null,[p,b,e(s,{color:"gree"},{default:l(()=>[n("可执行文件 ")]),_:1}),n(" 绿色 "),h,t("p",null,[n("d "),e(s,{color:"blue"},{default:l(()=>[n(" 表示目录")]),_:1}),n(" 蓝色"),m,n(" l "),e(s,{color:"wathet"},{default:l(()=>[n(" 表示链接文件")]),_:1}),n(" 浅蓝色"),_,n(" b "),e(s,{color:"yellow"},{default:l(()=>[n(" 表示块设备文件")]),_:1}),n(" 黄色"),g,n(" c "),e(s,{color:"yellow"},{default:l(()=>[n(" 表示字符设备文件")]),_:1}),n(" 黄色"),v,n(" s "),e(s,{color:"purple"},{default:l(()=>[n(" 表示套接字文件")]),_:1}),n(" 紫色"),k,n(" p "),e(s,{color:"purple"},{default:l(()=>[n(" 表示管道文件")]),_:1}),n(" 紫色")]),f,x,y,t("p",null,[t("a",q,[n("1.ls"),e(d)]),n(" (list) 列出目录下的内容")]),t("table",null,[w,t("tbody",null,[P,I,z,T,L,A,C,t("tr",null,[t("td",null,[n("也可参考👉"),t("a",D,[n("linux命令-ll之按时间、大小顺序排列显示"),e(d)]),n("👈")]),S]),R,U])]),M,t("blockquote",null,[e(s,{color:"darkorange"},{default:l(()=>[n(" alias ")]),_:1}),n(" 别名（例如：a=”rm -r“好比如rm -r）"),N,e(s,{color:"darkorange"},{default:l(()=>[n(" alias ")]),_:1}),n(" 取消别名（unalias 别名）")]),t("p",null,[n("设置永久可参考👉"),t("a",E,[n("Linux设置永久别名alias的方法"),e(d)]),n("👈")]),O,t("blockquote",null,[t("p",null,[n("tail -f 文件名 【一般用来持续查看文件，比如查看日志或者是启动一个程序输出的结果】"),j,B,e(s,{color:"blue"},{default:l(()=>[n(" 简化： ")]),_:1}),G,n(" tailf 文件名")])]),F,e(s,{color:"red"},{default:l(()=>[n(" 编辑模式:：")]),_:1}),X,H,e(s,{color:"blue"},{default:l(()=>[n(" 编辑模式-->Esc键-->命令模式")]),_:1}),V,e(s,{color:"red"},{default:l(()=>[n(" 命令模式：")]),_:1}),Y,t("blockquote",null,[e(s,{color:"orange"},{default:l(()=>[n(" 跳转：")]),_:1}),$]),e(s,{color:"green"},{default:l(()=>[n("数字")]),_:1}),n(" gg 跳转到指定行"),K,e(s,{color:"orange"},{default:l(()=>[n("删除或剪切：")]),_:1}),W,e(s,{color:"green"},{default:l(()=>[n("数字")]),_:1}),n(" dd 删除光标所在行下指定的行数"),Q,e(s,{color:"orange"},{default:l(()=>[n("复制与粘贴：")]),_:1}),Z,e(s,{color:"green"},{default:l(()=>[n("数字")]),_:1}),n(" yy 复制光标下指定的行"),J,tt,nt,e(s,{color:"blue"},{default:l(()=>[n("命令模式 --> ：/？-->末行模式")]),_:1}),et,e(s,{color:"red"},{default:l(()=>[n(" 末行模式：")]),_:1}),st,e(s,{color:"red"},{default:l(()=>[n(" 可视模式：")]),_:1}),lt,at,dt,e(s,{color:"red"},{default:l(()=>[n(" gzip与gunzip")]),_:1}),n(),ot,e(s,{color:"red"},{default:l(()=>[n(" bzip2与bunzip2")]),_:1}),rt,e(s,{color:"red"},{default:l(()=>[n("tar的压缩与解压缩")]),_:1}),it,t("blockquote",null,[ct,e(s,{color:"blue"},{default:l(()=>[n("一般常用的压缩与解压缩")]),_:1}),ut]),e(s,{color:"teal"},{default:l(()=>[n("file（压缩包名）可以查看这个文件是否是压缩包和类型")]),_:1}),pt,bt,e(s,{color:"red"},{default:l(()=>[n("grep：")]),_:1}),e(s,{color:"green"},{default:l(()=>[n("语法：")]),_:1}),ht,e(s,{color:"red"},{default:l(()=>[n("正则表达式：")]),_:1}),t("blockquote",null,[e(s,{color:"bluye"},{default:l(()=>[n("基础正则表达式 -->grep可以直接使用")]),_:1})]),mt,t("p",null,[n("想要查看更多的正则表达式就去👉"),t("a",_t,[n("正则表达式（全）"),e(d)]),n("👈")]),gt,e(s,{color:"red"},{default:l(()=>[n("sed：")]),_:1}),e(s,{color:"green"},{default:l(()=>[n("语法：")]),_:1}),vt,e(s,{color:"orange"},{default:l(()=>[n("常用选项")]),_:1}),kt,e(s,{color:"orange"},{default:l(()=>[n("操作地址")]),_:1}),ft,e(s,{color:"orange"},{default:l(()=>[n("内置操作")]),_:1}),xt,e(s,{color:"red"},{default:l(()=>[n("awk：")]),_:1}),e(s,{color:"green"},{default:l(()=>[n("语法：")]),_:1}),yt,e(s,{color:"orange"},{default:l(()=>[n("内置操作")]),_:1}),qt,e(s,{color:"teal"},{default:l(()=>[n("which 文件名查找命令的绝对路径")]),_:1}),wt,Pt,It,t("p",null,[n("👉"),t("a",zt,[n("制作模板机"),e(d)]),n("👈")]),Tt,e(s,{color:"red"},{default:l(()=>[n("xshell连接慢如何解决：")]),_:1}),Lt,e(s,{color:"red"},{default:l(()=>[n("防火墙与selinux的关闭及开启和永久生效 ：")]),_:1}),t("p",null,[n("查看防火墙详情请看：👉"),t("a",At,[n("Linux防火墙命令"),e(d)]),n("👈")]),Ct,e(s,{color:"red"},{default:l(()=>[n("挂载磁盘：")]),_:1}),Dt,e(s,{color:"red"},{default:l(()=>[n("配置本地yum仓库：")]),_:1}),St,t("blockquote",null,[t("p",null,[n("配置完成之后"),Rt,Ut,n(" yum clean all 清除yum缓存"),Mt,n(" yum makecache 建立新的yum缓存"),Nt,n(" 或者直接用：yum makecache fas"),t("strong",null,[n("t "),e(s,{color:"darkorange"},{default:l(()=>[n("加载未加载的缓存")]),_:1})]),Et,t("strong",null,[e(s,{color:"blue"},{default:l(()=>[n("安装vim和man命令：")]),_:1})]),n(" yum -y install vim man")])]),e(s,{color:"red"},{default:l(()=>[n("设置永久挂载：")]),_:1}),t("blockquote",null,[t("p",null,[n("进入fstab："),Ot,jt,n(" vim /etc/fstab"),Bt,n(" /dev/sr0 /media/cdrom iso9660 defaults 0 0"),Gt,n(" 第一段:挂载的设备 "),e(s,{color:"darkorange"},{default:l(()=>[n("（dev/sr0）")]),_:1}),Ft,n(" 第二段:挂载的目录 "),e(s,{color:"darkorange"},{default:l(()=>[n("（/media/cdrom）")]),_:1}),Xt,n(" 第三段:文件系统类型 "),e(s,{color:"darkorange"},{default:l(()=>[n("（iso9660）")]),_:1}),Ht,n(" 第四段:挂载的参数 defaults默认参数 "),e(s,{color:"darkorange"},{default:l(()=>[n(" （defaults ）")]),_:1}),Vt,n(" 第五段:是否使用dump备份 0不备份 1备份 "),e(s,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1}),Yt,n(" 第六段:是否使用fsck检测 0不检测"),e(s,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1})])]),e(s,{color:"red"},{default:l(()=>[n("注解：")]),_:1}),$t,e(s,{color:"red"},{default:l(()=>[n("扩展：格式化磁盘")]),_:1}),Kt,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("重启系统的命令：reboot、init 6、shutdown -r ")]),_:1})])]),Wt,Qt,Zt,t("table",null,[t("thead",null,[t("tr",null,[t("th",null,[e(s,{color:"darkorange"},{default:l(()=>[n("rpm")]),_:1})]),Jt])]),tn]),nn,en,t("table",null,[t("thead",null,[t("tr",null,[t("th",null,[e(s,{color:"darkorange"},{default:l(()=>[n("yum ")]),_:1})]),sn])]),ln]),t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n("部署nginx（使用源码包部署）")]),_:1})])]),an,t("blockquote",null,[e(s,{color:"red"},{default:l(()=>[n("报错1：")]),_:1}),n("./configure: error: C compiler cc is not found"),dn]),e(s,{color:"green"},{default:l(()=>[n("解决：")]),_:1}),n("yum -y install gcc gcc-c++"),on,e(s,{color:"red"},{default:l(()=>[n("报错2：")]),_:1}),n("./configure: error: the HTTP rewrite module requires the PCRE library. You can either disable the module by using --without-http_rewrite_module option, or install the PCRE library into the system, or build the PCRE library statically from the source with nginx by using --with-pcre=<path> option. "),rn,e(s,{color:"green"},{default:l(()=>[n("解决：")]),_:1}),n("yum -y install pcre-devel"),cn,e(s,{color:"red"},{default:l(()=>[n("问题3：")]),_:1}),n("./configure: error: the HTTP gzip module requires the zlib library. You can either disable the module by using --without-http_gzip_module option, or install the zlib library into the system, or build the zlib library statically from the source with nginx by using --with-zlib=<path> option. "),un,e(s,{color:"green"},{default:l(()=>[n("解决：")]),_:1}),n("yum -y install zlib-devel"),e(s,{color:"teal"},{default:l(()=>[n("echo $? 通过其返回值，判断上一条命令是否执行成功（0表示执行成功；非0 表示执行失败）")]),_:1}),e(s,{color:"teal"},{default:l(()=>[n("make 编译"),pn,n(" make install 安装")]),_:1}),bn,hn,e(s,{color:"red"},{default:l(()=>[n("超级用户")]),_:1}),n(" root UID=0"),e(s,{color:"red"},{default:l(()=>[n("普通用户")]),_:1}),n(" /bin/bash UID！=0"),e(s,{color:"red"},{default:l(()=>[n("程序用户")]),_:1}),n(" /sbin/nologin"),mn,e(s,{color:"teal"},{default:l(()=>[n("创建一个名为mysql用户，并禁止登录系统（统称：程序用户）"),_n,n(" useradd -s /sbin/nologin mysql")]),_:1}),gn,vn,e(s,{color:"red",size:"5"},{default:l(()=>[n("用户管理：")]),_:1}),t("p",null,[t("strong",null,[e(s,{color:"green"},{default:l(()=>[n("新增用户语法：")]),_:1})])]),kn,e(s,{color:"teal"},{default:l(()=>[n("在创建用户时，默认会从/etc/skel目录下复制内容到用户家目录下")]),_:1}),fn,t("p",null,[t("strong",null,[e(s,{color:"green"},{default:l(()=>[n("修改用户信息语法：")]),_:1})])]),xn,t("blockquote",null,[e(s,{color:"teal"},{default:l(()=>[n(" passwd 修改或设置用户密码")]),_:1}),yn,t("p",null,[n("passwd root 密码 "),e(s,{color:"blue"},{default:l(()=>[n("更改root的密码")]),_:1}),qn,wn,n(" echo “123123”|passwd --stdin test 不交互设置命令，给test用户设置一个密码"),Pn,In,n(" passwd -l"),zn,n(" passwd -u"),Tn,n(" passwd -s")])]),t("p",null,[t("strong",null,[e(s,{color:"green"},{default:l(()=>[n("删除用户语法：")]),_:1})])]),Ln,An,e(s,{color:"red",size:"5"},{default:l(()=>[n("用户组管理：")]),_:1}),Cn,e(s,{color:"green"},{default:l(()=>[n("举例：")]),_:1}),Dn,t("blockquote",null,[e(s,{color:"blue"},{default:l(()=>[n("查看用户信息：")]),_:1}),Sn,e(s,{color:"blue"},{default:l(()=>[n("查看用户密码信息：")]),_:1}),Rn,e(s,{color:"blue"},{default:l(()=>[n("查看用户组信息：")]),_:1}),Un]),Mn,e(s,{color:"red"},{default:l(()=>[n("附加命令：")]),_:1}),Nn,t("p",null,[n("详情请看：👉"),t("a",En,[n("文件权限管理--权限掩码"),e(d)]),n("👈"),On,jn]),e(s,{color:"red"},{default:l(()=>[n("r读 w写 x执行")]),_:1}),Bn,t("blockquote",null,[e(s,{color:"blue"},{default:l(()=>[n("查看文件权限：")]),_:1})]),Gn,t("blockquote",null,[e(s,{color:"blue"},{default:l(()=>[n("文件的归属：")]),_:1}),Fn]),e(s,{color:"red"},{default:l(()=>[n("语法：")]),_:1}),Xn,t("blockquote",null,[Hn,e(s,{color:"teal"},{default:l(()=>[n(" 查找深度为1的名字、为.*结尾的文件再给他修改用户和用户组")]),_:1})]),e(s,{color:"red"},{default:l(()=>[n("权限掩码-->默认文件和目录的权限")]),_:1}),Vn,e(s,{color:"red"},{default:l(()=>[n("文件的ACL（访问控制列表）")]),_:1}),Yn,$n,e(s,{color:"red"},{default:l(()=>[n("特殊权限：")]),_:1}),Kn,e(s,{color:"red"},{default:l(()=>[n("特殊属性：")]),_:1}),Wn,e(s,{color:"green"},{default:l(()=>[n("用法：")]),_:1}),Qn,Zn,Jn,t("p",null,[n("详情查看："),t("a",te,[n("Linux磁盘管理"),e(d)])]),e(s,{color:"red",size:"5"},{default:l(()=>[n("fdisk：")]),_:1}),ne,e(s,{color:"teal"},{default:l(()=>[n("最常用的查看磁盘分区：fdisk -l")]),_:1}),ee,se,e(s,{color:"red"},{default:l(()=>[n("  ext4/ext3/ext2 -->centos6默认")]),_:1}),e(s,{color:"red"},{default:l(()=>[n("  XFS -->centos7默认")]),_:1}),e(s,{color:"red"},{default:l(()=>[n("  centos6和centos7的区别：默认系统不同")]),_:1}),le,e(s,{color:"teal"},{default:l(()=>[n("常用的是：df -Th 查看挂载文件")]),_:1}),ae,e(s,{color:"red",size:"5"},{default:l(()=>[n("gdisk：")]),_:1}),de,e(s,{color:"red",size:"4"},{default:l(()=>[n("交换分区 swap")]),_:1}),oe,re,e(s,{color:"red"},{default:l(()=>[n("查看内存：")]),_:1}),ie,e(s,{color:"red"},{default:l(()=>[n("查看文件、目录大小：")]),_:1}),ce,ue,e(s,{color:"red",size:"5"},{default:l(()=>[n("LVM 逻辑卷管理：")]),_:1}),pe,be,e(s,{color:"blue"},{default:l(()=>[n("作用：动态调整区分大小"),he,n(" 缺点：在性能上有所降低")]),_:1}),me,_e,e(s,{color:"orrages"},{default:l(()=>[n("pv 物理卷 -->直接对磁盘操作"),ge,n(" vg 卷组 -->将所有的物理卷组合"),ve,n(" lv 逻辑卷 -->在卷组中划分出一定的空间")]),_:1}),ke,e(s,{color:"teal"},{default:l(()=>[n("xfs_growfs 路径 刷新xfs文件系统"),fe,n(" resize2fs 路径 刷新ext4文件系统")]),_:1}),xe,e(s,{color:"red",size:"5"},{default:l(()=>[n("cache 缓存：")]),_:1}),ye,qe,e(s,{color:"red"},{default:l(()=>[n("lsblk 列出块设备信息")]),_:1}),we,Pe,e(s,{color:"red",size:"5"},{default:l(()=>[n("snapshot 快照：")]),_:1}),Ie,e(s,{color:"teal"},{default:l(()=>[n("UUID 设备的唯一标识："),ze,n(" blkid 查看磁盘的UUID"),Te,n(" nmcli conn show 查看网卡的UUID")]),_:1}),Le,Ae,Ce,De,e(s,{color:"red"},{default:l(()=>[n("RAID 0 条带模式")]),_:1}),Se,e(s,{color:"red"},{default:l(()=>[n("RAID 1 镜像模式 需要2N快盘")]),_:1}),Re,e(s,{color:"red"},{default:l(()=>[n("RAID 5 分布式奇偶校验模式 至少使用少3块硬盘")]),_:1}),Ue,e(s,{color:"red"},{default:l(()=>[n("降级与重构")]),_:1}),Me,e(s,{color:"teal"},{default:l(()=>[n("uname（uname -s） 显示linux内核名称【Linux】")]),_:1}),Ne,e(s,{color:"red"},{default:l(()=>[n("查看系统版本：cat /etc/redhat-release")]),_:1}),Ee,e(s,{color:"red"},{default:l(()=>[n("linux系统的运行级别")]),_:1}),Oe,t("p",null,[n("详细文章在："),t("a",je,[n("Linux中的重定向以及标准输入输出、混合输出和标准错误输出"),e(d)])]),e(s,{color:"red",size:"4"},{default:l(()=>[n("标准输入：")]),_:1}),Be,e(s,{color:"red",size:"4"},{default:l(()=>[n("标准输出：")]),_:1}),Ge,e(s,{color:"red",size:"4"},{default:l(()=>[n("混合输出：")]),_:1}),Fe,e(s,{color:"red",size:"4"},{default:l(()=>[n("标准错误：")]),_:1}),Xe,e(s,{color:"green"},{default:l(()=>[n("举例：")]),_:1}),He,Ve,Ye,t("p",null,[n("详情请看："),t("a",$e,[n("Linux周期性计划任务和任务调度以及举例"),e(d)])]),e(s,{color:"red"},{default:l(()=>[n("一次性计划任务：at")]),_:1}),Ke,e(s,{color:"red"},{default:l(()=>[n("周期性计划任务：crond")]),_:1}),We,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n("重点：")]),_:1})])]),Qe,e(s,{color:"teal"},{default:l(()=>[n("语法：")]),_:1}),Ze,e(s,{color:"green"},{default:l(()=>[n("举例：")]),_:1}),t("blockquote",null,[e(s,{color:"blue"},{default:l(()=>[n("1.每周三清空一下/var/ftp目录")]),_:1})]),Je,e(s,{color:"blue"},{default:l(()=>[n("2.每月的第一个周一凌晨2点30对/var/www/html/进行打包")]),_:1}),ts,e(s,{color:"blue"},{default:l(()=>[n("3.每月1日，重启一次httpd服务")]),_:1}),ns,e(s,{color:"blue"},{default:l(()=>[n("4.每一分钟删除一个文件")]),_:1}),es,e(s,{color:"blue"},{default:l(()=>[n("5.每两分钟删除一个目录")]),_:1}),ss,e(s,{color:"blue"},{default:l(()=>[n("6.每2周查找目录并删除")]),_:1}),ls,e(s,{color:"teal"},{default:l(()=>[n("补充：")]),_:1}),as,e(s,{color:"red"},{default:l(()=>[n("任务调度：")]),_:1}),ds,t("p",null,[n("详情请看："),t("a",os,[n("Linux进程管理"),e(d)])]),rs,is,e(s,{color:"red"},{default:l(()=>[n("ps命令：")]),_:1}),cs,e(s,{color:"teal"},{default:l(()=>[n("使用方法：")]),_:1}),us,e(s,{color:"red"},{default:l(()=>[n("netstat命令：")]),_:1}),ps,e(s,{color:"teal"},{default:l(()=>[n("使用方法：")]),_:1}),bs,e(s,{color:"red"},{default:l(()=>[n("top命令：")]),_:1}),hs,e(s,{color:"red"},{default:l(()=>[n("renice优先级：")]),_:1}),ms,e(s,{color:"teal"},{default:l(()=>[n("renice -n 优先级等级 pid 进程优先级命令/程序")]),_:1}),_s,gs,e(s,{color:"red"},{default:l(()=>[n("linux系统中进程状态：")]),_:1}),vs,e(s,{color:"red"},{default:l(()=>[n("僵尸进程：")]),_:1}),e(s,{color:"blue"},{default:l(()=>[n("什么是僵尸进程：")]),_:1}),ks,e(s,{color:"blue"},{default:l(()=>[n("解决僵尸进程：")]),_:1}),t("blockquote",null,[t("p",null,[n("1.重新启动系统"),fs,n(" 2.杀死父进程，将僵尸进程变为孤儿进程，此时孤儿进程由系统中的systemd接管，会自动清理。"),xs,ys,qs,n(" kill -9 pid "),e(s,{color:"daaafns"},{default:l(()=>[n("根据进程的pid强制杀死某个进程")]),_:1})])]),ws,e(s,{color:"teal"},{default:l(()=>[n("pstree 查看进程树")]),_:1}),e(s,{color:"teal"},{default:l(()=>[n("yum provides pstree 直接下载不了pstree，就可以利用这个命令找到pstree是哪个包")]),_:1}),e(s,{color:"red"},{default:l(()=>[n("结束（杀死）进程：")]),_:1}),Ps,e(s,{color:"teal"},{default:l(()=>[n("常用的杀进程是：")]),_:1}),Is,e(s,{color:"red"},{default:l(()=>[n("pgrep命令：")]),_:1}),zs,e(s,{color:"teal"},{default:l(()=>[n("pidof 进程名 根据进程查进程号")]),_:1}),Ts,Ls,t("p",null,[n("详情请看：👉"),t("a",As,[n("Linux su命令 – 切换用户、用户提权"),e(d)]),n("👈")]),Cs,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 语法格式：")]),_:1})])]),Ds,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 常用参数：")]),_:1})])]),Ss,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),Rs,Us,Ms,Ns,Es,Os,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" 用户提权：")]),_:1})])]),js,Bs,Gs,t("p",null,[n("详情请看：👉"),t("a",Fs,[n("Linux文件系统ln-软连接、硬链接"),e(d)]),n("👈")]),Xs,Hs,Vs,Ys,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n("硬链接与软链接（符号链接）")]),_:1})])]),e(s,{color:"blue"},{default:l(()=>[n("ln")]),_:1}),$s,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" 硬链接与软连接的区别：")]),_:1})])]),Ks,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),Ws,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Qs,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),Zs,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" 相关命令：")]),_:1})])]),Js,tl,e(s,{color:"teal"},{default:l(()=>[n("tune2fs 文件路径 查看文件系统的信息"),nl,n(" dumpe2fs 文件路径 查看文件系统的信息")]),_:1}),el,sl,t("p",null,[n("详情请看：👉"),t("a",ll,[n("Linux中的日志管理"),e(d)]),n("👈")]),e(s,{color:"teal"},{default:l(()=>[n("日志：记录系统中相关的信息 系统日志 程序日志")]),_:1}),al,dl,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" 相关命令：")]),_:1})])]),ol,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" 日志的级别（9个）：")]),_:1})])]),rl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),il,t("p",null,[t("strong",null,[e(s,{color:"red"},{default:l(()=>[n(" syslog管理：")]),_:1})])]),cl,t("p",null,[t("strong",null,[e(s,{color:"blue"},{default:l(()=>[n("服务端 ：")]),_:1})])]),ul,t("p",null,[t("strong",null,[e(s,{color:"blue"},{default:l(()=>[n("客户端：")]),_:1})])]),pl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("ifconfig命令：")]),_:1})]),bl,hl]),t("p",null,[n("详情请看：👉"),t("a",ml,[n("Linux网络管理之ifconfig命令 – 显示或设置网络设备"),e(d)]),n("👈")]),_l,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 语法格式：")]),_:1})])]),gl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 常用参数：")]),_:1})])]),vl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),kl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("ip命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",fl,[n("Linux网络管理之ip命令 – 显示与操作路由"),e(d)]),n("👈")]),xl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),yl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 常用参数：")]),_:1})])]),ql,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),wl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("ss命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",Pl,[n("Linux网络管理之ss命令– 显示活动套接字信息"),e(d)]),n("👈")]),Il,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),zl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Tl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),Ll,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("netstat命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",Al,[n("Linux网络管理之netstat命令– 显示网络状态"),e(d)]),n("👈")]),Cl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 语法格式：")]),_:1})])]),Dl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Sl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),Rl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("hostname命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",Ul,[n("Linux网络管理之hostname命令 – 显示和设置系统的主机名"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 语法格式：")]),_:1})])]),Ml,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 常用参数：")]),_:1})])]),Nl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),El,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("route命令：")]),_:1})])]),Ol,t("p",null,[n("详情请看：👉"),t("a",jl,[n("Linux网络管理之route命令 – 显示并设置路由"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),Bl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Gl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n(" 参考实例：")]),_:1})])]),Fl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("tcpdump命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",Xl,[n("Linux网络管理之tcpdump命令 – 监听网络流量"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),Hl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Vl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),Yl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("traceroute命令：")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",$l,[n("Linux网络管理之traceroute命令 – 追踪数据包在网络上的传输时的全部路径"),e(d)]),n("👈")]),Kl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),Wl,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Ql,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})]),Zl,n(" 追踪本地数据包到www.linuxprobe.com的传输路径：")]),Jl,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("ifup 开启网卡-激活网络接口")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",ta,[n("Linux网络管理之网卡、网络接口开关设置"),e(d)]),n("👈")]),na,ea,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),sa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),la,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("ifdown 关闭网卡– 禁用网络接口")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",aa,[n("Linux网络管理之网卡、网络接口开关设置"),e(d)]),n("👈")]),da,oa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),ra,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),ia,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("arp 地址解析协议")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",ca,[n("Linux网络管理之arp命令 – 操纵系统arp缓存（地址解析协议）"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),ua,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),pa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),ba,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("journalctl命令")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",ha,[n("Linux—journalctl命令 – 查看日志"),e(d)]),n("👈")]),ma,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),_a,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),ga,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),va,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("nmap 网络探测工具和安全和端口扫描器")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",ka,[n("Linux—nmap、nc命令 –网络探测工具和安全和端口扫描器"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),fa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),xa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),ya,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("nc 端口扫描 – 设置路由")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",qa,[n("Linux—nmap、nc命令 –网络探测工具和安全和端口扫描器"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),wa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),Pa,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),Ia,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("history 查看历史记录")]),_:1})])]),t("p",null,[n("详情请看：👉"),t("a",za,[n("Linux—history命令 –– 查看与操纵历史命令"),e(d)]),n("👈")]),t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("语法格式：")]),_:1})])]),Ta,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("常用参数：")]),_:1})])]),La,t("p",null,[t("strong",null,[e(s,{color:"teal"},{default:l(()=>[n("参考实例：")]),_:1})])]),Aa,t("p",null,[t("strong",null,[e(s,{color:"red",size:"5"},{default:l(()=>[n("补充：")]),_:1})])]),t("blockquote",null,[e(s,{color:"teal"},{default:l(()=>[n("chage -d 0 用户名 首次登录设置密码")]),_:1})])])}const Ma=r(u,[["render",Ca],["__file","Linux常用基础命令（巨全）你想要的我都有❀.html.vue"]]);export{Ma as default};
