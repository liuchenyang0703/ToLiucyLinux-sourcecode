import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as p,a as s,b as n,d as a,w as l,e as t}from"./app-6706a352.js";const d={},u={id:"网络配置-nat",tabindex:"-1"},b=s("a",{class:"header-anchor",href:"#网络配置-nat","aria-hidden":"true"},"#",-1),m=t('<p>前提：</p><blockquote><p>配置网络配置的时候需要先看本机的ip；<br><code>cmd</code>打开输入<code>ipconfig</code>查看本机ip</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046754.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>可以看出ip为<code>192.168.0.103</code>，子网掩码为：<code>255.255.255.0</code>，默认网关为：<code>192.168.0.1</code><br> 那么我们配置虚拟机ip的时候就不能写：192.168.2.10之类的了，需要和本机相关；</p></blockquote><p>所以，配置的内容：网关需要和本机一致：<code>192.168.0.1</code>，子网掩码也是一样的：<code>255.255.255.0</code>，ip的话可以设置：<code>192.168.0.1 - 192.168.0.255</code></p><p>注意：</p>',6),v=s("code",null,"桥接模式",-1),k=s("code",null,"net模式",-1),_=s("code",null,"虚拟机中",-1),g=s("code",null,"虚拟网络编辑器",-1),h={href:"https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&tn=baidu&wd=vamware%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AEnet%E7%BD%91%E7%BB%9C&oq=vamware%2520%25E8%2599%259A%25E6%258B%259F%25E6%259C%25BA%25E9%2585%258D%25E7%25BD%25AEnet%25E7%25BD%2591%25E7%25BB%259C&rsv_pq=b4c587e000002804&rsv_t=7d756RDi%2bJFRWPyxy6r1OyDYklnF8CpmmqLUVKudH2VsqL/AiNLQfDjD3Sk&rqlang=cn&rsv_enter=1&rsv_dl=tb&rsv_btype=t&inputT=221&rsv_sug3=43&rsv_sug1=33&rsv_sug7=100&rsv_sug2=0&rsv_sug4=976",target:"_blank",rel:"noopener noreferrer"},f=s("br",null,null,-1),x=s("code",null,"虚拟网络编辑器",-1),y=s("code",null,"VMware Virtual Ethernet Adapter for VMnet8",-1),E=t(`<ul><li>进入网卡页面：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/sysconfig/network-scripts/ifcfg-ens33
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>配置网络：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">TYPE</span><span class="token operator">=</span>Ethernet
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>static
<span class="token assign-left variable">NAME</span><span class="token operator">=</span>ens33
<span class="token assign-left variable">DEVICE</span><span class="token operator">=</span>ens33
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPADDR</span><span class="token operator">=</span><span class="token number">192.168</span>.0.10
<span class="token assign-left variable">NETMASK</span><span class="token operator">=</span><span class="token number">255.255</span>.255.0
<span class="token assign-left variable">GATEWAY</span><span class="token operator">=</span><span class="token number">192.168</span>.0.1
<span class="token assign-left variable">DNS1</span><span class="token operator">=</span><span class="token number">114.114</span>.114.114
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>重启网络服务</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/etc/init.d/network restart 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>查看网络信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ip</span> a 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046546.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>ping百度，测试是否可以连接网络</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> baidu.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046423.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以连接，那么就开始在本机ping刚刚配置的ip，如果可以ping通，这时候就可以用xshell等连接工具连接了。</p>`,13),w={id:"xshell连接慢如何解决",tabindex:"-1"},q=s("a",{class:"header-anchor",href:"#xshell连接慢如何解决","aria-hidden":"true"},"#",-1),B=s("p",null,[n("进入vi /etc/ssh/sshd_config"),s("br"),n(" 再找到UseDNS 吧yes改成no，前面“#”符号也要删，保存退出"),s("br"),n(" 重启ssh服务："),s("br"),n(" systemctl restart sshd")],-1),z={id:"防火墙与selinux的关闭及开启和永久生效",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#防火墙与selinux的关闭及开启和永久生效","aria-hidden":"true"},"#",-1),A={href:"https://blog.csdn.net/liu_chen_yang/article/details/123531619",target:"_blank",rel:"noopener noreferrer"},C=t("<blockquote><p>systemctl stop firewalld 关闭防火墙服务<br> start <br><br> systemctl disable firewalld 禁止防火墙开机自启动<br> enable <br><br> firewall-cmd --state 查看防火墙状态 <br> systemctl status firewalld<br><br> systemctl is-enabled firewalld<br> 查看防火墙是否开机自启动 <br><br> getenforce 查看selinux的状态<br> setenforce 设置selinux的状态<br> vi /etc/selinux/config<br> vi /etc/sysconfig/selinux<br> SELINUX=disabled<br> 重启系统生效</p></blockquote>",1),N={id:"挂载磁盘",tabindex:"-1"},V=s("a",{class:"header-anchor",href:"#挂载磁盘","aria-hidden":"true"},"#",-1),T=t('<blockquote><p>查看磁盘信息：<br> fdisk -l 查看<br><br> 创建目录：<br> mkdir /media/cdrom<br> mount /dev/sr0 /media/cdrom 挂载磁盘 <br><br> df -Th 挂在完查看挂载信息</p></blockquote><p>如果遇到挂载时报错：<code>mount: 在 /dev/sr0 上找不到媒体</code><br> 请检查ISO映像文件的连接设置；</p><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046739.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',3),O={id:"配置本地yum仓库",tabindex:"-1"},j=s("a",{class:"header-anchor",href:"#配置本地yum仓库","aria-hidden":"true"},"#",-1),L=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/yum.repos.d/
<span class="token function">mkdir</span> bak
<span class="token function">mv</span> *.repo bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>yum源文件存在 /etc/yum.repos.d 中<br><br> 创建一个文件(local.repo)：<br> vi local.repo<br> [local]<br> name=local<br> baseurl=file:///media/cdrom<br> enabled=1<br> gpgcheck=0</p></blockquote>`,2),S=s("br",null,null,-1),I=s("br",null,null,-1),F=s("br",null,null,-1),M=s("br",null,null,-1),P=s("br",null,null,-1),R=s("br",null,null,-1),U=s("br",null,null,-1),Y=s("br",null,null,-1),K=s("code",null,"/dev/sr0 /media/cdrom iso9660 defaults 0 0",-1),W=s("br",null,null,-1),G=s("br",null,null,-1),H=s("br",null,null,-1),J=s("br",null,null,-1),Q=s("br",null,null,-1),X=s("br",null,null,-1),Z=s("blockquote",null,[s("p",null,[n("1.系统中只有一块硬盘，sda,分区sda1,sda2 ;"),s("br"),n(" 2.根目录是整个系统目录的顶点，/mnt也在根目录下；"),s("br"),n(" 3.如果知道根目录对应的是哪个硬盘分区，可以判断出"),s("br"),n(" a.txt存到哪个设备上；"),s("br"),s("br"),n(" mount /dev/sr0 /media/cdrom"),s("br"),n(" mount /dev/sdb4 /mnt")])],-1),$={id:"扩展-挂载扩容盘",tabindex:"-1"},ss=s("a",{class:"header-anchor",href:"#扩展-挂载扩容盘","aria-hidden":"true"},"#",-1),ns=t(`<p>比如我们在创建虚拟机的时候还加了一块盘，想要挂载在/data/目录下，那么我们可以：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先创建/data目录</span>
<span class="token function">mkdir</span> /data

<span class="token comment"># 挂载目录</span>
<span class="token function">fdisk</span> <span class="token parameter variable">-l</span>	<span class="token comment"># 查看磁盘分区，确认新加的盘为那个，我这里是sdb</span>

<span class="token comment"># 将新盘sdb挂载到data目录</span>
<span class="token function">mount</span> /dev/sdb /data

<span class="token comment"># 如果出现了下面的内容</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mount /dev/sdb /data</span>
mount: /dev/sdb 写保护，将以只读方式挂载
mount: 未知的文件系统类型“<span class="token punctuation">(</span>null<span class="token punctuation">)</span>”
<span class="token comment"># 那么需要格式化一下磁盘，也就是下面将的，分centos6与centos7</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs -f /dev/sdb</span>
meta-data<span class="token operator">=</span>/dev/sdb               <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">512</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">3932160</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">sparse</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">15728640</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">1</span>
log      <span class="token operator">=</span>internal log           <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">7680</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token comment"># 这样就格式化完成了，然后再次进行挂载；</span>
<span class="token function">mount</span> /dev/sdb /data
<span class="token comment">#就可以看到已经挂载完成了。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046334.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>现在挂载完成了，但是重启他会失效，需要重新挂载，如果我们不想重新挂载，那么可以和上面的挂载方法一样，设置永久挂载；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/fstab</span>

<span class="token comment"># 在最后一行添加</span>
/dev/sdb /data/ xfs defaults <span class="token number">0</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后保存退出，重启测试，如果配置的有问题会导致连接不上，需要到虚拟机或服务器重新配置，所以要谨慎更谨慎；</p><p>解析：</p>`,7),as=s("br",null,null,-1),es=s("br",null,null,-1),ls=s("code",null,"df -Th",-1),ts=s("br",null,null,-1),os=s("br",null,null,-1),is=s("br",null,null,-1),cs=s("figure",null,[s("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412201046475.png",alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),rs={id:"扩展-格式化磁盘",tabindex:"-1"},ps=s("a",{class:"header-anchor",href:"#扩展-格式化磁盘","aria-hidden":"true"},"#",-1),ds=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#Cetnos6格式化磁盘</span>
mkfs.ext4 <span class="token parameter variable">-f</span> /dev/<span class="token punctuation">[</span>sda<span class="token punctuation">]</span>
<span class="token comment">#Centos7格式化磁盘</span>
mkfs.xfs <span class="token parameter variable">-f</span> /dev/<span class="token punctuation">[</span>sda<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,2);function us(bs,ms){const e=i("font"),o=i("ExternalLinkIcon");return r(),p("div",null,[s("h2",u,[b,n(),a(e,{color:"red"},{default:l(()=>[n("网络配置 NAT")]),_:1})]),m,s("blockquote",null,[s("p",null,[n("此方法适用于"),v,n("，如果开始设置的模式为"),k,n("，则还需要到"),_,n("的"),g,n("中配置，详细配置可百度一下："),s("a",h,[n("vamware虚拟机配置net网络"),a(o)]),f,n(" 因为桥接模式，比较简便多用，不用配置"),x,n("，也不用在本机配置"),y,n("。")])]),E,s("h2",w,[q,n(),a(e,{color:"red"},{default:l(()=>[n("xshell连接慢如何解决")]),_:1})]),B,s("h2",z,[D,n(),a(e,{color:"red"},{default:l(()=>[n("防火墙与selinux的关闭及开启和永久生效 ")]),_:1})]),s("p",null,[n("防火墙详情请看：👉"),s("a",A,[n("Linux防火墙命令"),a(o)]),n("👈")]),C,s("h2",N,[V,n(),a(e,{color:"red"},{default:l(()=>[n("挂载磁盘")]),_:1})]),T,s("h2",O,[j,n(),a(e,{color:"red"},{default:l(()=>[n("配置本地yum仓库")]),_:1})]),L,s("blockquote",null,[s("p",null,[n("配置完成之后"),S,I,n(" yum clean all 清除yum缓存"),F,n(" yum makecache 建立新的yum缓存"),M,n(" 或者直接用：yum makecache fas"),s("strong",null,[n("t "),a(e,{color:"darkorange"},{default:l(()=>[n("加载未加载的缓存")]),_:1})]),P,s("strong",null,[a(e,{color:"blue"},{default:l(()=>[n("安装vim和man命令：")]),_:1})]),n(" yum -y install vim man")])]),a(e,{color:"red"},{default:l(()=>[n("设置永久挂载：")]),_:1}),s("blockquote",null,[s("p",null,[n("进入fstab："),R,U,n(" vim /etc/fstab"),Y,K,W,n(" 第一段:挂载的设备 "),a(e,{color:"darkorange"},{default:l(()=>[n("（dev/sr0）")]),_:1}),G,n(" 第二段:挂载的目录 "),a(e,{color:"darkorange"},{default:l(()=>[n("（/media/cdrom）")]),_:1}),H,n(" 第三段:文件系统类型 "),a(e,{color:"darkorange"},{default:l(()=>[n("（iso9660）")]),_:1}),J,n(" 第四段:挂载的参数 defaults默认参数 "),a(e,{color:"darkorange"},{default:l(()=>[n(" （defaults ）")]),_:1}),Q,n(" 第五段:是否使用dump备份 0不备份 1备份 "),a(e,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1}),X,n(" 第六段:是否使用fsck检测 0不检测"),a(e,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1})])]),a(e,{color:"red"},{default:l(()=>[n("注解：")]),_:1}),Z,s("h2",$,[ss,n(),a(e,{color:"red"},{default:l(()=>[n("扩展：挂载扩容盘")]),_:1})]),ns,s("blockquote",null,[s("p",null,[n("/dev/sdb：为磁盘分区的目录，也就是挂载到data的源目录"),as,n(" /data/：这个是目录路径，挂载的目标路径及目录"),es,n(" xfs：centos7是xfs，centos6是ext4，如果不确定可以看在临时挂载的时候"),ls,n("看到的"),ts,n(" defaults：挂载的参数 defaults默认参数"),os,n(" 第五段：是否使用dump备份 0不备份 1备份 "),a(e,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1}),is,n(" 第六段：是否使用fsck检测 0不检测"),a(e,{color:"darkorange"},{default:l(()=>[n("（0）")]),_:1})])]),cs,s("h2",rs,[ps,n(),a(e,{color:"red"},{default:l(()=>[n("扩展：格式化磁盘")]),_:1})]),ds,s("p",null,[s("strong",null,[a(e,{color:"teal"},{default:l(()=>[n("重启系统的命令：reboot、init 6、shutdown -r ")]),_:1})])])])}const _s=c(d,[["render",us],["__file","使用Vmware创建Centos7虚拟机（安装和配置网络环境、xshell连接、防火墙、yum仓库、磁盘挂载、重启命令）.html.vue"]]);export{_s as default};
