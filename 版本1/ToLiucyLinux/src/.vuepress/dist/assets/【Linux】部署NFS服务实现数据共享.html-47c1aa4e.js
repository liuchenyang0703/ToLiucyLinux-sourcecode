import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o,c,a as e,b as n,d as s,w as t,e as l}from"./app-6706a352.js";const u={},p=e("figure",null,[e("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412181441583.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),b=e("p",null,[n("👨‍🎓"),e("strong",null,"博主简介")],-1),m={href:"https://blog.csdn.net/liu_chen_yang?type=blog",target:"_blank",rel:"noopener noreferrer"},h=e("br",null,null,-1),v={href:"https://blog.csdn.net/liu_chen_yang?type=blog",target:"_blank",rel:"noopener noreferrer"},_=e("br",null,null,-1),g={href:"https://bbs.huaweicloud.com/community/myblog",target:"_blank",rel:"noopener noreferrer"},f=e("br",null,null,-1),k={href:"https://developer.aliyun.com/my?spm=a2c6h.13148508.setting.3.21fc4f0eCmz1v3#/article?_k=zooqoz",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),y=e("strong",null,"交流社区：",-1),N={href:"https://bbs.csdn.net/forums/lcy",target:"_blank",rel:"noopener noreferrer"},S=e("br",null,null,-1),F=e("br",null,null,-1),P=e("hr",null,null,-1),C=e("h2",{id:"一、nfs简介与rpc简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一、nfs简介与rpc简介","aria-hidden":"true"},"#"),n(" 一、NFS简介与RPC简介")],-1),R=e("h3",{id:"_1-nfs服务简介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-nfs服务简介","aria-hidden":"true"},"#"),n(" 1. NFS服务简介")],-1),w=e("p",null,"NFS是一种网络协议，NFS依赖RPC才能工作。（RHEL5.0上是NFS V3而RHEL6.0上是NFS V4）",-1),q=e("p",null,"NFS 的基本原则是“容许不同的客户端及服务端通过一组RPC分享相同的文件系统”，它是独立于操作系统，容许不同硬件及操作系统的系统共同进行文件的分享。",-1),I=l(`<h3 id="_2-rpc协议简介" tabindex="-1"><a class="header-anchor" href="#_2-rpc协议简介" aria-hidden="true">#</a> 2. RPC协议简介</h3><p>RPC（Remote Procedure Call）远程过程调用，它是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。其工作在TCP/UDP的111端口。建立在Socket之上的，主要是简化编程的工作在底层提供网络之间的通信。</p><p>RPC采用客户机/服务器模式。请求程序就是一个客户机，而服务提供程序就是一个服务器。首先，客户机调用进程发送一个有进程参数的调用信息到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用信息的到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，然后等待下一个调用信息，最后，客户端调用进程接收答复信息，获得进程结果，然后调用执行继续进行。</p><p>RPC远程过程调度：</p><ul><li>NFS 协议本身并没有网络传输功能，而是基于远程过程调用协议实现的</li><li>提供一个面向过程的远程服务的接口</li><li>可以通过网络从远程主机程序上请求服务，而不需要了解底层网络技术的协议</li><li>工作在 OSI 模型的会话层，它可以为遵从 RPC 协议应用层协议提供端口注册功能</li><li>事实上，有很多服务（NFS 和 NIS 等）都可以向 RPC 注册端口</li><li>RPC 使用网络端口 111 来监听客户端的请求</li></ul><h3 id="_3-nfs工作流程" tabindex="-1"><a class="header-anchor" href="#_3-nfs工作流程" aria-hidden="true">#</a> 3. NFS工作流程</h3><p>1.首先服务器端启动RPC服务，并开启111端口<br> 2.然后还需要服务器端启动NFS服务，并向RPC注册端口信息<br> 3.客户端启动RPC（portmap服务），向服务端的RPC(portmap)服务请求服务端的NFS端口<br> 4.服务端的RPC(portmap)服务反馈NFS端口信息给客户端。<br> 5.客户端通过获取的NFS端口来建立和服务端的NFS连接并进行数据的传输。</p><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412181441484.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 挂载原理</label></li></ul><blockquote><p>  当我们在NFS服务器设置好一个共享目录/opt 后，其他人是有权访问/opt这个共享目录的，NFS客户端就可以将这个目录挂载到自己文件系统的某个挂载点（这个挂载点可以自己定义），路径不同也可以；如下图客户端A与客户端B挂载的目录就不相同。并且挂载好后我们在本地能够看到服务端/opt下的所有数据。</p></blockquote><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412181440917.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、准备工作" tabindex="-1"><a class="header-anchor" href="#二、准备工作" aria-hidden="true">#</a> 二、准备工作</h2><h3 id="_2-1-服务器信息" tabindex="-1"><a class="header-anchor" href="#_2-1-服务器信息" aria-hidden="true">#</a> 2.1 服务器信息</h3><table><thead><tr><th style="text-align:center;">主机</th><th style="text-align:center;">IP</th><th style="text-align:center;">服务</th><th style="text-align:center;">端口</th></tr></thead><tbody><tr><td style="text-align:center;">服务端</td><td style="text-align:center;">172.16.11.201</td><td style="text-align:center;">nfs、rpc</td><td style="text-align:center;">2049、111</td></tr><tr><td style="text-align:center;">客户端</td><td style="text-align:center;">172.16.11.202</td><td style="text-align:center;">nfs、rpc</td><td style="text-align:center;">2049、111</td></tr></tbody></table><h3 id="_2-2-防火墙配置" tabindex="-1"><a class="header-anchor" href="#_2-2-防火墙配置" aria-hidden="true">#</a> 2.2 防火墙配置</h3><ul><li>关闭防火墙服务</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙</span>
systemctl stop firewalld
<span class="token comment"># 禁止防火墙开机自启</span>
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果是必须要开启防火墙，可以使用两种方法，开端口或服务</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 开启nfs和rpc服务</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>nfs
firewall-cmd <span class="token parameter variable">--permanent</span> --add-service<span class="token operator">=</span>rpc-bind
<span class="token comment"># 重载防火墙规则</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 放行端口</span>
<span class="token comment"># nfs端口为：2049、rpc端口为：111</span>
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">2049</span>/tcp
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">111</span>/tcp
firewall-cmd <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">111</span>/udp
<span class="token comment"># 重载防火墙规则</span>
firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果使用的是<code>iptables</code>防火墙，可以使用以下命令：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">2049</span> <span class="token parameter variable">-j</span> ACCEPT
iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> tcp <span class="token parameter variable">--dport</span> <span class="token number">111</span> <span class="token parameter variable">-j</span> ACCEPT
iptables <span class="token parameter variable">-A</span> INPUT <span class="token parameter variable">-p</span> udp <span class="token parameter variable">--dport</span> <span class="token number">111</span> <span class="token parameter variable">-j</span> ACCEPT
iptables-save <span class="token operator">&gt;</span> /etc/sysconfig/iptables
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-selinux沙盒" tabindex="-1"><a class="header-anchor" href="#_2-3-selinux沙盒" aria-hidden="true">#</a> 2.3 selinux沙盒</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 临时关闭</span>
setenforce <span class="token number">0</span>

<span class="token comment"># 永久关闭</span>
<span class="token function">vim</span> /etc/selinux/config

<span class="token comment"># 将selinux=修改为disabled</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412181440694.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,25),E=l(`<h2 id="三、部署-nfs-和-rpc-服务" tabindex="-1"><a class="header-anchor" href="#三、部署-nfs-和-rpc-服务" aria-hidden="true">#</a> 三、部署 NFS 和 RPC 服务</h2><p>两台都安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> nfs-utils rpcbind

<span class="token comment"># 启动并设置开机自启</span>
systemctl start rpcbind
systemctl start nfs-server
systemctl <span class="token builtin class-name">enable</span> rpcbind
systemctl <span class="token builtin class-name">enable</span> nfs-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看服务状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status nfs
systemctl status rpcbind
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412181440383.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="四、配置共享目录" tabindex="-1"><a class="header-anchor" href="#四、配置共享目录" aria-hidden="true">#</a> 四、配置共享目录</h2>`,7),j=e("code",null,"/data/test/",-1),z=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 服务端</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),T=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 客户端</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=e("p",null,[n("NFS配置文件格式："),e("code",null,"共享目录 [客户端1(参数)] [客户端2（参数）] ")],-1),L=e("blockquote",null,[e("p",null,[n("共享目录：NFS服务器需要共享的实际路径（绝对路径）；"),e("br"),n(" 客户端：可以访问共享目录的服务器地址或网段。")])],-1),V=e("ul",null,[e("li",null,"客户端常用形式：")],-1),U=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"客户端"),e("th",null,"说明")])],-1),B=e("tr",null,[e("td",{style:{"text-align":"left"}},"172.16.11.202"),e("td",null,"指定IP地址的主机")],-1),D=e("tr",null,[e("td",{style:{"text-align":"left"}},"172.16.10.1/24"),e("td",null,"指定子网的所有主机")],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},"172.16.10.*"),e("td",null,"指定子网的所有主机")],-1),G={style:{"text-align":"left"}},O={href:"http://www.xxx.com",target:"_blank",rel:"noopener noreferrer"},J=e("td",null,"指定域名的主机",-1),K=e("tr",null,[e("td",{style:{"text-align":"left"}},"*.xxx.com"),e("td",null,"指定域中的所有主机")],-1),M=e("tr",null,[e("td",{style:{"text-align":"left"}},"*"),e("td",null,"所有主机")],-1),Q=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/exports

/data/test *<span class="token punctuation">(</span>rw,sync,no_root_squash<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析：</p><table><thead><tr><th>参数</th><th>参数解析</th></tr></thead><tbody><tr><td>/data/test</td><td>要共享的目录</td></tr><tr><td>*</td><td>要共享给谁，可以是网段，可以是ip，*代表是所有都可以共享</td></tr><tr><td>----括号内，NFS访问权限参数----</td><td>---------------括号内，NFS访问权限参数---------------</td></tr><tr><td>ro</td><td>只读</td></tr><tr><td>rw</td><td>读写</td></tr><tr><td>sync</td><td>同时将数据写入到内存与硬盘中，保证不丢失数据</td></tr><tr><td>async</td><td>优先将数据保存到内存，然后再写入硬盘；效率更高，但可能会丢失数据</td></tr><tr><td>root_squash</td><td>当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户</td></tr><tr><td>no_root_squash</td><td>当NFS客户端以root管理员访问时，映射为NFS服务器的root管理员</td></tr><tr><td>all_squash</td><td>无论NFS客户端使用什么账户访问，均映射为NFS服务器的匿名用户</td></tr><tr><td>no_all_squash</td><td>保留共享文件的UID和GID（默认）</td></tr></tbody></table>`,3),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`systemctl restart nfs rpcbind
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),X=l(`<p>showmount [选项] (参数/服务端IP)</p><blockquote><p>-d：仅显示已被NFS客户端加载的共享目录；<br> -e：显示NFS服务器上所有的共享目录。</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># showmount -e 172.16.11.201</span>
Export list <span class="token keyword">for</span> <span class="token number">172.16</span>.11.201:
/data/test *
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、挂载共享目录及配置永久挂载" tabindex="-1"><a class="header-anchor" href="#五、挂载共享目录及配置永久挂载" aria-hidden="true">#</a> 五、挂载共享目录及配置永久挂载</h2>`,4),Y=e("code",null,"mount",-1),Z=e("hr",null,null,-1),$=e("p",null,[n("2、如果卸载挂载，提示：设备正忙（umount.nfs4: /data/test: device is busy），可以使用"),e("code",null,"umount -l /data/test"),n("，不过存在一定风险，容易丢失数据")],-1),ee=e("ul",null,[e("li",null,"临时挂载")],-1),ne=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mount</span> <span class="token parameter variable">-t</span> nfs <span class="token number">172.16</span>.11.201:/data/test /data/test/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果遇到以下报错，有可能是：目录权限问题、服务端配置文件ip范围写的有问题、防火墙、selinux问题；</p><blockquote><p>mount.nfs: access denied by server while mounting 172.16.11.201:/data/test</p></blockquote><ul><li>永久挂载</li></ul>`,4),se=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/fstab

<span class="token number">172.16</span>.11.201:/data/test /data/test nfs defaults <span class="token number">0</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存退出之后，重启服务器可以进行测试，一旦写错，重启服务器将造成启动不了服务器，所以要谨慎；</p><hr>`,3),ae=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">umount</span> 挂载点

举例：
<span class="token function">umount</span> /data/test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><blockquote><p>数据测试的话可自行测试；</p></blockquote>`,3);function te(le,ie){const i=d("ExternalLinkIcon"),a=d("font");return o(),c("div",null,[p,e("blockquote",null,[b,e("p",null,[n("  🏅"),e("a",m,[n("CSDN博客专家"),s(i)]),h,n("   🏅"),e("a",v,[n("云计算领域优质创作者"),s(i)]),_,n("   🏅"),e("a",g,[n("华为云开发者社区专家博主"),s(i)]),f,n("   🏅"),e("a",k,[n("阿里云开发者社区专家博主"),s(i)]),x,n(" 💊"),y,e("a",N,[n("运维交流社区"),s(i)]),n(" 欢迎大家的加入！"),S,n(" 🐋 希望大家多多支持，我们一起进步！😄"),F,n(" 🎉如果文章对你有帮助的话，欢迎 点赞 👍🏻 评论 💬 收藏 ⭐️ 加关注+💗")])]),P,C,R,w,q,e("p",null,[n("NFS在文件传送或信息传送过程中依赖于RPC协议。RPC，远程过程调用 (Remote Procedure Call) 是能使客户端执行其他系统中程序的一种机制。NFS本身是没有提供信息传输的协议和功能的，但NFS却能让我们通过网络进行资料的分享，这是因为NFS使用了一些其它的传输协议。而这些传输协议用到这个RPC功能的。"),s(a,{color:"red"},{default:t(()=>[n("可以这么理解RPC和NFS的关系：NFS是一个文件系统，而RPC是负责信息的传输。")]),_:1})]),I,s(a,{color:"red"},{default:t(()=>[n("修改配置文件永久生效要重启服务器；")]),_:1}),E,e("p",null,[n("①、首先，在"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("需要确认好要挂载的共享目录；这里我们要挂载的共享目录为："),j,n("，就需要先创建此目录")]),z,e("p",null,[n("②、然后，需要确认好共享目录要挂载到"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("的哪个目录上，这里就同目录吧；")]),T,e("p",null,[n("③、配置"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("NFS配置文件")]),A,L,V,e("table",null,[U,e("tbody",null,[B,D,H,e("tr",null,[e("td",G,[e("a",O,[n("www.xxx.com"),s(i)])]),J]),K,M])]),Q,e("p",null,[n("④、重启"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("NFS和RPC服务")]),W,e("p",null,[n("⑤、在"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("查看NFS服务共享信息")]),X,s(a,{color:"red"},{default:t(()=>[n("注意：")]),_:1}),e("blockquote",null,[e("p",null,[n("1、"),e("strong",null,[n("挂载目录"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("的数据会覆盖"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("的数据；")])]),e("p",null,[n("1、"),e("strong",null,[n("挂载目录"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("的数据会覆盖"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("的数据；")])]),e("p",null,[n("1、"),e("strong",null,[n("挂载目录"),s(a,{color:"gree"},{default:t(()=>[n("服务端")]),_:1}),n("的数据会覆盖"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("的数据；")])]),e("p",null,[n("​ "),e("strong",null,[n("执行"),Y,n("挂载的为"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("；")])]),Z,$]),ee,e("p",null,[n("在"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("执行挂载目录命令")]),e("p",null,[n("mount -t "),s(a,{color:"red"},{default:t(()=>[n("指定挂载的文件类型")]),_:1}),n(),s(a,{color:"gree"},{default:t(()=>[n("nfs服务端的IP")]),_:1}),n(":"),s(a,{color:"orange"},{default:t(()=>[n("服务端要共享的路径目录")]),_:1}),n(),s(a,{color:"blue"},{default:t(()=>[n("要挂载到本机的路径目录")]),_:1})]),ne,e("p",null,[n("这样只是临时挂载，重启服务器之后就会消息，所以可以配置永久挂载，在"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("上；")]),se,e("ul",null,[e("li",null,[n("卸载挂载（"),s(a,{color:"blue"},{default:t(()=>[n("客户端")]),_:1}),n("）")])]),ae])}const oe=r(u,[["render",te],["__file","【Linux】部署NFS服务实现数据共享.html.vue"]]);export{oe as default};
