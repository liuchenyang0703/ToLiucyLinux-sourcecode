import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as d,c as o,a,d as s,w as l,b as e,e as t}from"./app-6706a352.js";const p={},m=t(`<figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/1d08edbca8894c2ebb94586f53c2b100.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><blockquote><p>  本文主要讲解的是创建mysql的容器，大家都知道，在外面进入mysql都很容易，“mysql -u用户名 -p密码”就可以，但是是容器的mysql就没那么好进入了，首先还要拉取镜像，创建容器，在进入容器，然后才可以进入mysql；其实也没有那么难，而且比在宿主机装一个mysql简便了很多，也省去了很多时间，比如，宿主机上mysql还要编译，容器就不用，但是最难的一点就是如何去创建容器呢，他和普通的创建容器是不一样的，所以，今天给大家讲讲创建mysql容易，并进入、创建库和表；</p></blockquote><h2 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h2><p>如需要哪个mysql版本可以在后面直接写，比如我需要mysql:5.7.38的，就直接拉取5.7.38的镜像；如果需要默认的mysql，那么直接拉取mysql就好，默认的应该是最新的版本；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># docker pull mysql:5.7.38</span>
<span class="token number">5.7</span>.38: Pulling from library/mysql
66fb34780033: Pull complete 
ef4ccd63cdb4: Pull complete 
d6f28a94c51f: Pull complete 
7feea2a503b5: Pull complete 
71dd5852ecd9: Pull complete 
3da2c95cac2f: Pull complete 
af7913db289c: Pull complete 
77f552f93c12: Pull complete 
3ed53edb61ab: Pull complete 
67e1c6839f08: Pull complete 
abcdaaf08d0f: Pull complete 
Digest: sha256:bbe0e2b0a33ef5c3a983e490dcb3c1a42d623db1d5679e82f65cce3f32c8f254
Status: Downloaded newer image <span class="token keyword">for</span> mysql:5.7.38
docker.io/library/mysql:5.7.38
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拉取完镜像查看一下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/c371d3805c04428e90cdeccd92266277.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>接下来就是这一环节中最重要的一点了，创建容器；</p><h2 id="创建容器" tabindex="-1"><a class="header-anchor" href="#创建容器" aria-hidden="true">#</a> 创建容器</h2><p>创建mysql容器，在后台启动mysql容器</p>`,12),u=t(`<blockquote><ul><li>容器内 mysql数据文件目录: <code>/var/lib/mysql/</code></li><li>容器内 mysql配置文件目录: <code>/etc/mysql/</code></li></ul></blockquote><hr><p>需要哪个可自行选择，建议使用第三个：<br>   因为第三种数据和配置文件都可以做到同步，要拿数据的话，可以直接在宿主机映射的目录拿就可以了；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123123</span> <span class="token parameter variable">-d</span> mysql:5.7.38

<span class="token comment">#mysql默认版本的创建；就是最后不要:5.7.38了，其他都一样；</span>
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123123</span> <span class="token parameter variable">-d</span> mysql

<span class="token comment">#加数据映射的容器创建；设置开机自启</span>
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> mysql <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--privileged</span> <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306 <span class="token parameter variable">-v</span> /var/lib/mysql/my.cnf:/etc/mysql/my.cnf <span class="token parameter variable">-v</span> /var/lib/mysql/data:/var/lib/mysql/data/ <span class="token parameter variable">-v</span> /etc/localtime/:/etc/localtime/ <span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123123</span> mysql:5.7.38
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样容器就创建完成了；创建完查看一下容器；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/bd0bc9983b844a0da605a31765bf66fe.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h2 id="进入mysql容器" tabindex="-1"><a class="header-anchor" href="#进入mysql容器" aria-hidden="true">#</a> 进入mysql容器</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mysql <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="登录mysql" tabindex="-1"><a class="header-anchor" href="#登录mysql" aria-hidden="true">#</a> 登录mysql</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p123123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库" aria-hidden="true">#</a> 创建数据库</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#首先查看一下数据库</span>
show databases<span class="token punctuation">;</span>

<span class="token comment">#创建数据库</span>
create database cs<span class="token punctuation">;</span>

<span class="token comment">#再次查看是否创建成功；</span>
show databases<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/4c98cbc0c278484588bd79e14992f222.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h3 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表" aria-hidden="true">#</a> 创建表</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入刚刚创建的库</span>
use cs<span class="token punctuation">;</span>

<span class="token comment">#查看表，里面是空的目前</span>
show tables<span class="token punctuation">;</span>

<span class="token comment">#创建表</span>
create table biaoone<span class="token punctuation">(</span>id int,name varchar<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>,age int<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">#查看表,现在是有一个的</span>
show tables

<span class="token comment">#查看表机构</span>
desc biaoone<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/b0b4eea0bd244372a3321e7a06d7f534.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><h1 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章" aria-hidden="true">#</a> 相关文章</h1>`,18),b={href:"https://liucy.blog.csdn.net/article/details/124930789",target:"_blank",rel:"noopener noreferrer"},v=a("hr",null,null,-1),h={href:"https://liucy.blog.csdn.net/article/details/126288434",target:"_blank",rel:"noopener noreferrer"},g=a("figure",null,[a("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/22d86cdcfc94420a84febfc6a5b7a22a.jpeg",alt:"在这里插入图片描述",tabindex:"0",loading:"lazy"}),a("figcaption",null,"在这里插入图片描述")],-1);function k(f,y){const n=c("font"),i=c("ExternalLinkIcon");return d(),o("div",null,[m,a("ul",null,[a("li",null,[s(n,{color:"red"},{default:l(()=>[e("-it")]),_:1}),e("     以交互形式创建容器；")]),a("li",null,[s(n,{color:"red"},{default:l(()=>[e("--name")]),_:1}),e("  指定了容器的名称，方便之后进入容器的命令行；")]),a("li",null,[s(n,{color:"red"},{default:l(()=>[e("-p")]),_:1}),e("     指定映射端口，如果遇到端口被占用，可以使用其他端口比如3333:3306；就可以；")]),a("li",null,[s(n,{color:"red"},{default:l(()=>[e("-e MYSQL_ROOT_PASSWORD=123123")]),_:1}),e("   直接就指定了mysql的root密码；")]),a("li",null,[s(n,{color:"red"},{default:l(()=>[e("-d")]),_:1}),e("         表示在后台运行；")]),a("li",null,[s(n,{color:"red"},{default:l(()=>[e("mysql:3.7.38")]),_:1}),e("    代表的你用的哪个镜像")]),a("li",null,[e("如果需要做数据映射，可以加个-v参数，"),s(n,{color:"red"},{default:l(()=>[e("-v 宿主机路径，容器内路径；")]),_:1})])]),u,a("blockquote",null,[a("p",null,[a("a",b,[e("Centos7安装Mysql5.7（超详细版）"),s(i)])]),v,a("p",null,[a("a",h,[e("【云原生】Docker之创建并进入mysql容器"),s(i)])])]),g])}const x=r(p,[["render",k],["__file","【云原生】Docker之创建并进入mysql容器.html.vue"]]);export{x as default};
