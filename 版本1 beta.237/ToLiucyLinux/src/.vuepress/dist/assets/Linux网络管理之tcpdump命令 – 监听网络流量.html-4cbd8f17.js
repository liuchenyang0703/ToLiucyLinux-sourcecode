import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as d,c as a,e as n}from"./app-6706a352.js";const e={},r=n(`<p>tcpdump命令是一款sniffer工具，是linux上的抓包工具，嗅探器；它可以打印出所有经过网络接口的数据包的头信息。</p><p>tcpdump命令工作时先要把网卡的工作模式切换到混杂模式。所以tcpdump命令需要以root身份运行。tcpdump命令是linux下使用最广泛的网络协议分析工具。使用tcpdump命令时，必须精通TCP/IP协议工作原理。</p><h2 id="语法格式" tabindex="-1"><a class="header-anchor" href="#语法格式" aria-hidden="true">#</a> 语法格式：</h2><blockquote><p>tcpdump [参数]</p></blockquote><h2 id="常用参数" tabindex="-1"><a class="header-anchor" href="#常用参数" aria-hidden="true">#</a> 常用参数：</h2><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>-a</td><td>尝试将网络和广播地址转换成名称</td></tr><tr><td>-c&lt;数据包数目&gt;</td><td>收到指定的数据包数目后，就停止进行倾倒操作</td></tr><tr><td>-d</td><td>把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出</td></tr><tr><td>-dd</td><td>把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出</td></tr><tr><td>-ddd</td><td>把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出</td></tr><tr><td>-e</td><td>在每列倾倒资料上显示连接层级的文件头</td></tr><tr><td>-f</td><td>用数字显示网际网络地址</td></tr><tr><td>-F&lt;表达文件&gt;</td><td>指定内含表达方式的文件</td></tr><tr><td>-i&lt;网络界面&gt;</td><td>使用指定的网络截面送出数据包</td></tr><tr><td>-l</td><td>使用标准输出列的缓冲区</td></tr><tr><td>-n</td><td>不把主机的网络地址转换成名字</td></tr><tr><td>-N</td><td>不列出域名</td></tr><tr><td>-O</td><td>不将数据包编码最佳化</td></tr><tr><td>-p</td><td>不让网络界面进入混杂模式</td></tr><tr><td>-q</td><td>快速输出，仅列出少数的传输协议信息</td></tr><tr><td>-r&lt;数据包文件&gt;</td><td>从指定的文件读取数据包数据</td></tr><tr><td>-s&lt;数据包大小&gt;</td><td>设置每个数据包的大小</td></tr><tr><td>-S</td><td>用绝对而非相对数值列出TCP关联数</td></tr><tr><td>-t</td><td>在每列倾倒资料上不显示时间戳记</td></tr><tr><td>-tt</td><td>在每列倾倒资料上显示未经格式化的时间戳记</td></tr><tr><td>-T&lt;数据包类型&gt;</td><td>强制将表达方式所指定的数据包转译成设置的数据包类型</td></tr><tr><td>-v</td><td>详细显示指令执行过程</td></tr><tr><td>-vv</td><td>更详细显示指令执行过程</td></tr><tr><td>-x</td><td>用十六进制字码列出数据包资料</td></tr><tr><td>-w&lt;数据包文件&gt;</td><td>把数据包数据写入指定的文件</td></tr><tr><td>-i</td><td>指定网卡</td></tr><tr><td>-nn</td><td>显示ip不显示主机名</td></tr><tr><td>port</td><td>指定端口</td></tr></tbody></table><h2 id="参考实例" tabindex="-1"><a class="header-anchor" href="#参考实例" aria-hidden="true">#</a> 参考实例：</h2><p>监视指定网络接口的数据包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump -i eth1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>监视指定主机的数据包：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump host linuxcool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>截获主机192.168.10.10 和主机192.168.10.20 或192.168.10.30的通信:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump host 192.168.10.10 and \\ (192.168.10.20 or 192.168.10.30 \\)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>抓取80端口的HTTP报文，以文本形式展示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@linuxcool ~<span class="token punctuation">]</span><span class="token comment"># tcpdump -i any port 80 -A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),s=[r];function c(i,o){return d(),a("div",null,s)}const u=t(e,[["render",c],["__file","Linux网络管理之tcpdump命令 – 监听网络流量.html.vue"]]);export{u as default};
