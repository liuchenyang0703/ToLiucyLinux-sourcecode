import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as d,a as e,b as a,d as n,w as o,e as r}from"./app-6706a352.js";const p={},u=r('<figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412161451089.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><blockquote><p>  自上次发现了一款从docker镜像里提取dockerfile的工具，今天我们又发现了两个有趣的docker小工具，其中有一个也是提取dockerfile的。</p></blockquote><p>两个有趣的docker小工具：runlike与whaler</p><ul><li>runlike：通过容器打印出容器的启动命令</li><li>whaler：通过镜像导出dockerfile</li></ul><h2 id="runlike-通过容器打印出容器的启动命令" tabindex="-1"><a class="header-anchor" href="#runlike-通过容器打印出容器的启动命令" aria-hidden="true">#</a> runlike：通过容器打印出容器的启动命令</h2><h3 id="方法一-直接通过pip方式安装" tabindex="-1"><a class="header-anchor" href="#方法一-直接通过pip方式安装" aria-hidden="true">#</a> 方法一：直接通过pip方式安装</h3>',7),h={href:"https://liucy.blog.csdn.net/article/details/126519415?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},g=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> runlike
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="方法二-通过容器方式免安装使用" tabindex="-1"><a class="header-anchor" href="#方法二-通过容器方式免安装使用" aria-hidden="true">#</a> 方法二：通过容器方式免安装使用</h3>`,2),b={href:"https://liucy.blog.csdn.net/article/details/123204224?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},_=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">runlike</span><span class="token operator">=</span><span class="token string">&quot;docker run --rm -v /var/run/docker.sock:/var/run/docker.sock assaflavie/runlike&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种方法需要拉取镜像，自动创建容器来加载这个命令，个人感觉第一种方法比较好一些；</p><h3 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>runlike 容器名/容器id
runlike <span class="token parameter variable">-p</span> 容器名/容器id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),k=e("figure",null,[e("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412161451673.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),f=e("figure",null,[e("img",{src:"https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412161451035.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),m=e("h2",{id:"whaler-通过镜像导出dockerfile",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#whaler-通过镜像导出dockerfile","aria-hidden":"true"},"#"),a(" whaler：通过镜像导出dockerfile")],-1),v=e("br",null,null,-1),x={href:"https://liucy.blog.csdn.net/article/details/123203549?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},y={href:"https://liucy.blog.csdn.net/article/details/123204224?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},w=r(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> <span class="token assign-left variable">whaler</span><span class="token operator">=</span><span class="token string">&quot;docker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock:ro pegleg/whaler&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置完别名就可以来从镜像中导出dockerfile了；</p><h3 id="用法-1" tabindex="-1"><a class="header-anchor" href="#用法-1" aria-hidden="true">#</a> 用法</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>whaler 镜像名/镜像id
whaler <span class="token parameter variable">-sV</span><span class="token operator">=</span><span class="token number">1.36</span> 镜像名/镜像id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>直接用whaler会报错，需要添加一个参数；</p><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412161451165.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这样就可以出来了，也可以重定向到一个文件中&gt;a.txt就可以；<br> 当然这个比较少，因为这个镜像也就只有1M，所以，不会输出很多东西，感兴趣的朋友可以去自己写一个镜像，或者去官网拉一个大一点的镜像，然后再来测试，就会有很多很多的，特别详细；</p><figure><img src="https://lcy-blog.oss-cn-beijing.aliyuncs.com/blog/202412161451998.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章" aria-hidden="true">#</a> 相关文章</h2>`,9),q={href:"https://liucy.blog.csdn.net/article/details/126519415?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},L=e("br",null,null,-1),j={href:"https://liucy.blog.csdn.net/article/details/123204224?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"},D=e("br",null,null,-1),z={href:"https://liucy.blog.csdn.net/article/details/123203549?spm=1001.2014.3001.5502",target:"_blank",rel:"noopener noreferrer"};function V(N,B){const l=i("ExternalLinkIcon"),s=i("font");return c(),d("div",null,[u,e("blockquote",null,[e("p",null,[a("如果没有pip可以选择先装pip；参考："),e("a",h,[a("【Linux】中安装pip（详细教程）"),n(l)])])]),g,e("blockquote",null,[e("p",null,[a("使用设置别名的方式来做，如果长期使用，可设置为永久别名；参考："),e("a",b,[a("Linux设置永久别名alias的方法"),n(l)])])]),_,n(s,{color:"red"},{default:o(()=>[a("runlike")]),_:1}),a("打印出来的是很多在一行；例如："),k,n(s,{color:"red"},{default:o(()=>[a("runlike -p")]),_:1}),a(" 加-p参数会给你整理一行一行整理出来，看着比较简洁；例如："),f,m,e("blockquote",null,[e("p",null,[a("  平时可能会构建很多不同的镜像，比如维护一些基础Docker镜像、想查看一些公开仓库的Docker镜像是怎么构建的，或因为长时间不维护找不到当时构建镜像的Dockerfile，或者因为网络无法查看时，能从镜像导出Dockerfile就显得很重要，这里可以通过whaler来快速的导出. 这里我们依旧不安装，通过容器化的方式使用whaler命令设置别名，便于使用；其实他和我写过的另一个命令是一样的dfimage，都是一样的效果；"),v,e("a",x,[a("如何从docker镜像里提取dockerfile"),n(l)])])]),e("p",null,[a("同样的设置永久的别名可参考："),e("a",y,[a("Linux设置永久别名alias的方法"),n(l)])]),w,e("blockquote",null,[e("p",null,[a("文章一："),e("a",q,[a("【Linux】中安装pip（详细教程）"),n(l)]),L,a(" 文章二："),e("a",j,[a("Linux设置永久别名alias的方法"),n(l)]),D,a(" 文章三："),e("a",z,[a("如何从docker镜像里提取dockerfile"),n(l)])])])])}const I=t(p,[["render",V],["__file","【云原生】Docker小工具：runlike与whaler（打印容器的启动命令与导出镜像的dockerfile）.html.vue"]]);export{I as default};
