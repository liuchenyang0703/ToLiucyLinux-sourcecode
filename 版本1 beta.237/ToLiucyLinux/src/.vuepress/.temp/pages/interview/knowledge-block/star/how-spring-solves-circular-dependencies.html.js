export const data = JSON.parse("{\"key\":\"v-7cd6b9bd\",\"path\":\"/interview/knowledge-block/star/how-spring-solves-circular-dependencies.html\",\"title\":\"Spring如何解决循环依赖的\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Spring如何解决循环依赖的\",\"icon\":\"circle-info\",\"order\":4,\"pageview\":false,\"date\":\"2023-09-06T00:00:00.000Z\",\"comment\":false,\"breadcrumb\":false,\"description\":\"1. 什么是循环依赖\\r 就是A对象依赖了B对象，B对象依赖了A对象。 说白是一个或多个对象实例之间存在直接或间接的依赖关系，这种依赖关系构成了构成一个环形调用。 ~~~java // A依赖了B class A{ public B b; } // B依赖了A class B{ public A a; } ~~~ 那么循环依赖是个问题吗？ 如果不考虑Sp...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"http://liuchenyang.top/interview/knowledge-block/star/how-spring-solves-circular-dependencies.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"ToLiucyLinux\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Spring如何解决循环依赖的\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 什么是循环依赖\\r 就是A对象依赖了B对象，B对象依赖了A对象。 说白是一个或多个对象实例之间存在直接或间接的依赖关系，这种依赖关系构成了构成一个环形调用。 ~~~java // A依赖了B class A{ public B b; } // B依赖了A class B{ public A a; } ~~~ 那么循环依赖是个问题吗？ 如果不考虑Sp...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Liucy\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-09-06T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Spring如何解决循环依赖的\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-09-06T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Liucy\\\",\\\"url\\\":\\\"http://liuchenyang.top\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 什么是循环依赖\",\"slug\":\"_1-什么是循环依赖\",\"link\":\"#_1-什么是循环依赖\",\"children\":[]},{\"level\":2,\"title\":\"2. Bean的生命周期\",\"slug\":\"_2-bean的生命周期\",\"link\":\"#_2-bean的生命周期\",\"children\":[]},{\"level\":2,\"title\":\"3. 三级缓存\",\"slug\":\"_3-三级缓存\",\"link\":\"#_3-三级缓存\",\"children\":[]},{\"level\":2,\"title\":\"4. 分析\",\"slug\":\"_4-分析\",\"link\":\"#_4-分析\",\"children\":[]},{\"level\":2,\"title\":\"5. Spring解决了哪种循环依赖\",\"slug\":\"_5-spring解决了哪种循环依赖\",\"link\":\"#_5-spring解决了哪种循环依赖\",\"children\":[]}],\"readingTime\":{\"minutes\":11.29,\"words\":3388},\"filePathRelative\":\"interview/knowledge-block/star/how-spring-solves-circular-dependencies.md\",\"localizedDate\":\"2023年9月6日\",\"copyright\":{\"author\":\"LiucyLinux(LiucyLinux.cn)\",\"license\":\"MIT\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
